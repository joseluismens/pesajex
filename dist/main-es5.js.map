{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/clientes/pedidos-list/pedidos-list.component.ts","webpack:///src/app/components/clientes/pedidos-list/pedidos-list.component.html","webpack:///src/app/components/clientes/pedidos-pendientes/clientes.component.ts","webpack:///src/app/components/clientes/pedidos-pendientes/clientes.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navigation/navigation.component.ts","webpack:///src/app/components/navigation/navigation.component.html","webpack:///src/app/components/pedidos/create-pedidos/create-pedidos.component.ts","webpack:///src/app/components/pedidos/create-pedidos/create-pedidos.component.html","webpack:///src/app/components/pedidos/list-pedidos/list-pedidos.component.ts","webpack:///src/app/components/pedidos/list-pedidos/list-pedidos.component.html","webpack:///src/app/components/pedidos/pedidos.component.ts","webpack:///src/app/components/pedidos/pedidos.component.html","webpack:///src/app/components/pesajes/deshabilitar-pesaje/deshabilitar-pesaje.component.ts","webpack:///src/app/components/pesajes/deshabilitar-pesaje/deshabilitar-pesaje.component.html","webpack:///src/app/components/pesajes/listar-pesajes/listar-pesajes.component.ts","webpack:///src/app/components/pesajes/listar-pesajes/listar-pesajes.component.html","webpack:///src/app/components/pesajes/nuevo-pesaje/nuevo-pesaje.component.ts","webpack:///src/app/components/pesajes/nuevo-pesaje/nuevo-pesaje.component.html","webpack:///src/app/components/photos/photo-form/photo-form.component.ts","webpack:///src/app/components/photos/photo-form/photo-form.component.html","webpack:///src/app/components/photos/photo-list/photo-list.component.ts","webpack:///src/app/components/photos/photo-list/photo-list.component.html","webpack:///src/app/components/photos/photo-preview/photo-preview.component.ts","webpack:///src/app/components/photos/photo-preview/photo-preview.component.html","webpack:///src/app/components/signin/signin.component.ts","webpack:///src/app/components/signin/signin.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/silos/configure-silo/configure-silo.component.ts","webpack:///src/app/components/silos/configure-silo/configure-silo.component.html","webpack:///src/app/components/silos/create-silo/create-silo.component.ts","webpack:///src/app/components/silos/create-silo/create-silo.component.html","webpack:///src/app/components/silos/list-silos/list-silos.component.ts","webpack:///src/app/components/silos/list-silos/list-silos.component.html","webpack:///src/app/components/user/list-user/list-user.component.ts","webpack:///src/app/components/user/list-user/list-user.component.html","webpack:///src/app/components/user/user.component.ts","webpack:///src/app/components/user/user.component.html","webpack:///src/app/global.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/user-admin.guard.ts","webpack:///src/app/guards/user-encargado.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/pedido.service.ts","webpack:///src/app/services/pesaje.service.ts","webpack:///src/app/services/photo.service.ts","webpack:///src/app/services/silo.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","declarations","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","providers","bootstrap","PedidosListComponent","pedidoService","userService","cargarPedidos","misPedidos","length","status","getPedidos","subscribe","res","DATA","document","getElementById","pdf","orientation","unit","format","text","html","save","downloadPDF","ClientesComponent","getPedidosFalse","pedido","date","Date","milliseconds","getTime","dateP","createdAt","mills","oneday","setStatus","_id","fire","icon","message","ErrorComponent","FooterComponent","HomeComponent","authService","router","isLogged","loggedIn","title","user","getUserRole","navigate","butonclic","NavigationComponent","authservice","opened","closeOnClickOutside","cargarcomponentes","logout","token","getToken","nombre","getUserName","rol","isRegular","isAdmin","CreatePedidosComponent","photoService","formBuilder","formPedido","group","producto","value","disabled","required","cliente","cantidad","precio","url","window","location","pathname","split","getUserID","cargarDatos","getPhoto","data","setTimeout","target","patchValue","parseInt","product","price","response","err","console","log","savePedido","reset","onSubmit","generatePrice","ListPedidosComponent","img","formProducto","description","photoInput","getMisPedidos","actualizar","imagePath","PedidosComponent","route","idProduct","recibirId","DeshabilitarPesajeComponent","pesajeService","pesajes","formPesaje","rut","razonSocial","pesoEntrada","pesoSalida","tipoTransaccion","patente","tipoVehiculo","tipoProducto","getPesajes","getPhotos","productos","verify","obtenerPesajes","deletePesaje","pesaje","guardarId","updatePesaje","click","error","ListarPesajesComponent","details","event","preventDefault","filter","toLocaleLowerCase","match","ngOnInit","fecha","toString","inputName","inputRut","inputPatente","inputFecha","style","display","values","pesajesToday","todayDate","toISOString","slice","i","created","substr","push","map","elemento","Object","head","body","options","filename","image","type","html2canvas","content","from","set","changeFilter","searchNombre","searchRut","searchPatente","searchFecha","downloadPDFToday","downloadUnique","NuevoPesajeComponent","maxLength","guardarPesaje","PhotoFormComponent","files","file","reader","FileReader","onload","photoSelected","result","readAsDataURL","stock","createPhoto","open","uploadPhoto","onPhotoSelected","PhotoListComponent","authservive","enviarId","photos","p","role","emit","PhotoPreviewComponent","activatedRoute","params","photo","deletePhoto","updatePhoto","SigninComponent","formSignin","email","password","formEmail","signin","localStorage","setItem","JSON","stringify","timer","NewPassword","solicitar","SignupComponent","formSignup","name","signup","ConfigureSiloComponent","siloService","silos","formSilo","capacidadTotal","estado","obtenerSilos","getSilos","silo","deleteSilo","get","updateSilo","CreateSiloComponent","createSilo","ListSilosComponent","progreso","ListUserComponent","formRole","userRole","getUsersData","users","auth","userId","changeRole","setAttribute","UserComponent","Global","Auth","AuthGuard","getItem","providedIn","UserAdminGuard","UserEncargadoGuard","AuthService","http","post","removeItem","parse","PedidoService","headers","put","PesajeService","selectPesaje","PhotoService","fd","FormData","append","SiloService","TokenInterceptorService","next","clone","setHeaders","handle","UserService","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NuevoPesajeComponent } from './components/pesajes/nuevo-pesaje/nuevo-pesaje.component';\nimport { DeshabilitarPesajeComponent } from './components/pesajes/deshabilitar-pesaje/deshabilitar-pesaje.component';\nimport { ClientesComponent } from './components/clientes/pedidos-pendientes/clientes.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ListarPesajesComponent } from './components/pesajes/listar-pesajes/listar-pesajes.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { PhotoListComponent } from './components/photos/photo-list/photo-list.component';\nimport { PhotoFormComponent } from './components/photos/photo-form/photo-form.component';\nimport { PhotoPreviewComponent } from './components/photos/photo-preview/photo-preview.component';\nimport { ListSilosComponent } from './components/silos/list-silos/list-silos.component';\nimport { CreateSiloComponent } from './components/silos/create-silo/create-silo.component';\nimport { ConfigureSiloComponent } from './components/silos/configure-silo/configure-silo.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { UserComponent } from './components/user/user.component';\nimport { UserAdminGuard } from './guards/user-admin.guard';\nimport { UserEncargadoGuard } from './guards/user-encargado.guard';\n\nimport { AuthService } from './services/auth.service';\nimport { PedidosComponent } from './components/pedidos/pedidos.component';\nimport { CreatePedidosComponent } from './components/pedidos/create-pedidos/create-pedidos.component';\nimport { ListPedidosComponent } from './components/pedidos/list-pedidos/list-pedidos.component';\nimport { PedidosListComponent } from './components/clientes/pedidos-list/pedidos-list.component';\nimport { ListUserComponent } from './components/user/list-user/list-user.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n\n  },\n  {\n    path: 'signin',\n    component: SigninComponent,\n  },\n  { path: 'signup', \n    component: SignupComponent\n\n  },\n  { path: 'home',\n   component: HomeComponent \n\n\n  },\n  {\n    path: 'catalogo',\n    component: PhotoListComponent,\n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n\n  {\n    path: 'pesajes/nuevo-pesaje',\n    component: NuevoPesajeComponent,\n    canActivate: [AuthGuard,UserEncargadoGuard]\n\n\n  },\n  {\n    path: 'pesajes/deshabilitar-pesaje', \n    component: DeshabilitarPesajeComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]  },\n  {\n    path: 'clientes', \n    component: ClientesComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'clientes/list', \n    component: PedidosListComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'users/list', \n    component: ListUserComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'pesajes/listar-pesaje', \n    component: ListarPesajesComponent,\n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path:'pedidos',\n    component:PedidosComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path:'pedido/:id',\n    component:CreatePedidosComponent,\n    canActivate:[AuthGuard]\n  }\n  ,{\n    path:'pedidos-list',\n    component:ListPedidosComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path: 'catalogo/new', \n    component: PhotoFormComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'catalogo/:id', \n    component: PhotoPreviewComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'silos', \n    component: ListSilosComponent,\n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n\n  {\n    path: 'silos/new', \n    component: CreateSiloComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path: 'silos/configure', \n    component: ConfigureSiloComponent, \n    canActivate: [AuthGuard,UserEncargadoGuard]\n  },\n  {\n    path:'user',\n    component:UserComponent,\n    canActivate: [AuthGuard,UserAdminGuard]\n  },\n\n  { path: '**', component: ErrorComponent }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, OnChanges } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  constructor() {\n\n\n\n  }\n\n\n\n}\n","<app-navigation></app-navigation>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule} from '@angular/core';\nimport { CommonModule }   from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { NuevoPesajeComponent } from './components/pesajes/nuevo-pesaje/nuevo-pesaje.component';\nimport { RouterModule } from '@angular/router';\nimport { DeshabilitarPesajeComponent } from './components/pesajes/deshabilitar-pesaje/deshabilitar-pesaje.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ClientesComponent } from './components/clientes/pedidos-pendientes/clientes.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { ListarPesajesComponent } from './components/pesajes/listar-pesajes/listar-pesajes.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {NgbPaginationModule, NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\nimport { SidebarModule } from 'ng-sidebar';\nimport { ErrorComponent } from './components/error/error.component';\nimport { PhotoFormComponent } from './components/photos/photo-form/photo-form.component';\nimport { PhotoPreviewComponent } from './components/photos/photo-preview/photo-preview.component';\nimport { PhotoListComponent } from './components/photos/photo-list/photo-list.component';\nimport { ListSilosComponent } from './components/silos/list-silos/list-silos.component';\nimport { CreateSiloComponent } from './components/silos/create-silo/create-silo.component';\nimport { ConfigureSiloComponent } from './components/silos/configure-silo/configure-silo.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { HttpInterceptor } from \"@angular/common/http\";\nimport { TokenInterceptorService } from \"./services/token-interceptor.service\";\nimport { NgxPaginationModule } from \"ngx-pagination\";\nimport { UserComponent } from './components/user/user.component';\n\nimport {GoogleMapsModule} from '@angular/google-maps';\nimport { PedidosComponent } from './components/pedidos/pedidos.component';\nimport { CreatePedidosComponent } from './components/pedidos/create-pedidos/create-pedidos.component';\nimport { ListPedidosComponent } from './components/pedidos/list-pedidos/list-pedidos.component';\nimport { PedidosListComponent } from './components/clientes/pedidos-list/pedidos-list.component';\nimport { ListUserComponent } from './components/user/list-user/list-user.component';\nimport {ProgressBarModule} from \"angular-progress-bar\"\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    NavigationComponent,\n    NuevoPesajeComponent,\n    DeshabilitarPesajeComponent,\n    HomeComponent,\n    ClientesComponent,\n    ListarPesajesComponent,\n    ErrorComponent,\n    PhotoFormComponent,\n    PhotoPreviewComponent,\n    PhotoListComponent,\n    ListSilosComponent,\n    CreateSiloComponent,\n    ConfigureSiloComponent,\n    SigninComponent,\n    SignupComponent,\n    UserComponent,\n    PedidosComponent,\n    CreatePedidosComponent,\n    ListPedidosComponent,\n    PedidosListComponent,\n    ListUserComponent\n    \n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    ProgressBarModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    NgbPaginationModule,\n    NgbAlertModule,\n    CommonModule,\n    SidebarModule.forRoot(),\n    NgxPaginationModule,\n    GoogleMapsModule,\n  \n  ],\n  providers: [AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal, * as Jwal from 'sweetalert2';\nimport * as jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { empty } from 'rxjs';\n@Component({\n  selector: 'app-pedidos-list',\n  templateUrl: './pedidos-list.component.html',\n  styleUrls: ['./pedidos-list.component.css']\n})\nexport class PedidosListComponent implements OnInit {\n  misPedidos:any;\n  name:string;\n  status:boolean;\n  constructor(private pedidoService:PedidoService, private userService:UserService) { }\n  ngOnInit(): void {\n    this.cargarPedidos(); \n    if (this.misPedidos.length==0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n  }\n  cargarPedidos(){\n    this.pedidoService.getPedidos().subscribe(res=>{\n      this.misPedidos=res;\n      \n    });\n    \n    \n  }\n  public downloadPDF():void {\n    let DATA = document.getElementById('table-pedidos');\n    let pdf = new jsPDF({\n      orientation:'1',\n      unit:'pt',\n      format:'a4'\n    });\n    pdf.text(\"Listado de Pedidos \",200,30);\n    autoTable(pdf, { html: '#table-pedidos' })\n    pdf.save('angular-demo.pdf');\n  }\n}\n","<div class=\"container\">\n\n    <h2 class=\"text-center\"><b>Listado de pedidos</b></h2>\n    <div class=\"pdf\">\n\n        <button class=\"btn btn-info\" style=\"margin-right:'5px';\" routerLink=\"/clientes\">Volver</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"downloadPDF()\">Generar PDF</button>\n\n    </div>\n    <div class=\"card\">\n        <div class=\"card-body table-responsive\">\n            <table class=\"table table-striped table-hover \" id=\"table-pedidos\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">N°</th>\n                        <th scope=\"col\">Nombre de usuario</th>\n                        <th scope=\"col\">Cantidad</th>\n                        <th scope=\"col\">Total</th>\n                        <th scope=\"col\">Estado</th>\n                        <th scope=\"col\">Fecha</th>\n                        <th scope=\"col\">Actualizado</th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr class=\"table-light\" *ngFor=\"let pedido of this.misPedidos, let i= index\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td> {{pedido.nameClient}}</td>\n                        <td>{{pedido.cantidad}} Uds</td>\n                        <td>{{pedido.precio | currency:'CLP '}}</td>\n                         <td style=\"color: #007bff;\" *ngIf=\"pedido.status\"><b>Aprobado</b></td>\n                        <td style=\"color: red;\" *ngIf=\"!pedido.status\"><b> Pendiente</b></td>\n                        <td>{{pedido.createdAt | date:'dd/MM/yyyy'}}</td>\n                        <td>{{pedido.updatedAt | date:'dd/MM/yyyy'}}</td>                 \n\n\n\n                    </tr>\n                    <tr *ngIf=\"this.status\" class=\"text-center\">\n                        <td colspan=\"8\">No existe ningún pedido</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal, * as Jwal from 'sweetalert2';\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent implements OnInit {\n  misPedidos:any=[];\n  status:boolean=false;\n  constructor(private pedidoService:PedidoService, private userService:UserService) { }\n  ngOnInit(): void {\n    this.cargarPedidos();\n    \n    if (this.misPedidos.length==0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n    \n  }\n  cargarPedidos(){\n    this.pedidoService.getPedidosFalse().subscribe(res=>{\n      this.misPedidos=res as [];      \n      \n    });\n  }\n  aprobar(pedido:any){\n    let date=  new Date();\n    const milliseconds= new Date(date).getTime();\n    let dateP = new Date(pedido.createdAt);\n    const mills=dateP.getTime();\n    const oneday = 60 * 60 * 24 * 1000;\n\n    if(milliseconds-mills< oneday){\n        this.pedidoService.setStatus(pedido._id).subscribe(res=>{\n          Swal.fire({\n            icon:'success',\n            text:res.message\n          }   \n      )});\n  \n    }else{\n      Swal.fire({\n        icon:'warning',\n        text:'La solicitud ha caducado'\n      })   \n      \n    }\n    this.cargarPedidos();\n    \n    \n  }\n  \n  \n    \n\n\n\n}\n","<div class=\"container\">\n    <h2 class=\"text-center\"><b>Listado de pedidos pendientes</b></h2>\n    \n    <div class=\"pedidos\">\n        <button class=\"btn btn-warning\" routerLink=\"/clientes/list\">Todos los Pedidos</button>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-body table-responsive\">\n            <table class=\"table table-striped table-hover\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">N°</th>\n                        <th scope=\"col\">Cliente</th>\n                        <th scope=\"col\">Cantidad</th>\n                        <th scope=\"col\">Total</th>\n                        <th scope=\"col\">Estado</th>\n                        <th scope=\"col\">Fecha</th>\n                        <th scope=\"col\">Actualizado</th>\n                        <th scope=\"col\">Accion</th>\n\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr id=\"elements\" class=\"table-light\" *ngFor=\"let pedido of this.misPedidos, let i= index\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td> {{pedido.nameClient}}</td>\n                        <td>{{pedido.cantidad}} Uds</td>\n                        <td>{{pedido.precio | currency:'CLP '}}</td>\n                        <td style=\"color: #007bff;\" *ngIf=\"pedido.status\"><b>Habilitado</b></td>\n                        <td style=\"color: red;\" *ngIf=\"!pedido.status\"><b> No Habilitado</b></td>\n                        <td>{{pedido.createdAt | date:'dd/MM/yyyy'}}</td>\n                        <td>{{pedido.updatedAt | date:'dd/MM/yyyy'}}</td>\n                        <td>\n\n                            <button type=\"button\" (click)=\"aprobar(pedido)\"   class=\"btn btn-success\">Aprobar</button>\n                        </td>\n\n\n\n                    </tr>\n                    <tr *ngIf=\"this.status\" class=\"text-center\">\n                        <td colspan=\"8\">No existe ningun pedido pendiente</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer container-collapse\">\n        <div class=\"redes-sociales\">\n            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n            <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n            <i class=\"fa fa-snapchat\" aria-hidden=\"true\"></i>\n            <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n            <i class=\"fa fa-youtube\" aria-hidden=\"true\"></i>\n\n        </div>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  verify:boolean ;\n\n    position: {lat: -33.431044,lng: -70.662498};\n    label:{\n      color:\"black\",\n      text: \"Molinos S.A\"\n    }\n\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit(): void {\n\n  }\n  butonclic(){\n    let isLogged= this.authService.loggedIn();\n    if(isLogged){\n      Swal.fire({\n        title:'Por favor Incia sesión o registrate para acceder al catalogo',\n        icon:'info'\n      });\n    }else{\n      let user=this.authService.getUserRole();\n      if (user=='regular') {\n        this.router.navigate(['pedidos']);\n      }else{\n        if (user=='encargado' || user=='admin') {\n          this.router.navigate(['catalogo']);\n        }\n      }\n\n\n\n    }\n  }\n\n\n\n}\n","<div class=\"content\">\n  <h4 class=\"title\">COMPROMETIDOS CON LA CALIDAD!!</h4>\n  <ngb-carousel [showNavigationArrows]=\"true\" [showNavigationIndicators]=\"true\" interval=\"4000\" [keyboard]=\"true\"\n    [pauseOnHover]=\"true\" [wrap]=\"true\" [activeId]=\"'secondSlide'\">\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"assets/carousel/slide-01.jpg\" alt=\"Angular Carousel 1\">\n      </div>\n      <div class=\"carousel-caption\">\n\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"assets/carousel/slider-02.jpg\" alt=\"Angular Carousel 2\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"assets/carousel/img1.jpg\" alt=\"Angular Carousel 2\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"assets/carousel/img5.jpg\" alt=\"Angular Carousel 2\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n\n  </ngb-carousel>\n\n  <div class=\"myv\">\n    <h3>MISIÓN Y VISIÓN</h3>\n    <br>\n    <p>\n      Misión: Diferenciarnos para ser productores de harina de primera calidad y proveedores confiables para todos\n      nuestros clientes.\n      <br>\n      Visión: ser el proveedor preferido por los clientes. Nuestro compromiso es la excelencia, buscando hacer mejor las\n      cosas cada día.\n\n    </p>\n  </div>\n\n  <div class=\"row content\">\n\n    <div class=\"col-6 mx-auto\">\n\n      <h4 class=\"title\">Conoce nuestros productos</h4>\n      <div class=\"clearfix\"></div>\n      <div class=\"text-center\">\n\n        <button (click)=\"butonclic()\" class=\"btn-catalogo\"> Haz click aqui</button>\n      </div>\n\n    </div>\n\n    <div class=\"col-6 mx-auto\">\n\n      <h4 class=\"\">Nos encontramos en </h4>\n      <google-map height=\"300px\" width=\"500px\" [center]=\"position\">\n        <map-marker [position]=\"position\" [label]=\"label\"></map-marker>\n\n\n      </google-map>\n\n    </div>\n\n\n  </div>","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnChanges {\n  title = 'sistema-de-control-de-molinos';\n  public opened: boolean = false;\n  public closeOnClickOutside = false;\n  public token: any;\n  public nombre: any;\n  public rol: any;\n  isRegular: boolean;\n  isAdmin:boolean;\n  status: boolean;\n  constructor(public authservice: AuthService) {\n\n\n  }\n\n  ngOnInit(): void {\n    this.cargarcomponentes();\n\n  }\n  ngOnChanges() {\n    this.cargarcomponentes();\n  }\n\n  public toggleSidebar() {\n    this.opened = !this.opened;\n  }\n  cerrarSesion() {\n    this.authservice.logout();\n  }\n  \n  cargarcomponentes() {\n    this.token = this.authservice.getToken();\n    if (this.token != null) {\n      this.status = true;\n      const user = this.authservice.getUserRole();\n      this.nombre = this.authservice.getUserName();\n      this.rol = this.authservice.getUserRole();\n\n      if (user == \"regular\") {\n        this.isRegular = true;\n      } else {\n        this.isRegular = false;\n        if(user==\"admin\"){\n          this.isAdmin=true;\n        }else{\n          this.isAdmin=false;\n        }\n      }\n    } else {\n      this.status = false;\n    }\n\n\n  }\n\n\n\n}\n","<div>\n    <ng-sidebar-container style=\" height: 100vh\">\n        <ng-sidebar [opened]=\"opened\" mode=\"push\" autoCollapseWidth=100 *ngIf=\"this.status\">\n            <div class=\"text-justify\">\n                <img src=\"../../../assets/logo.png\" alt=\"\">\n\n                <ul class=\"nav justify-contetn-center menu\" id=\"sidebar\">\n                    <div class=\"accordion\" id=\"accordionMenu\">\n\n                        <div class=\"card\">\n                            <div class=\"card-header\" id=\"headingOne\">\n\n                                <a class=\"item\" data-toggle=\"collapse\" data-target=\"#collapsePesaje\" aria-expanded=\"false\"\n                                    aria-controls=\"collapseOne\">\n                                    <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>\n                                    Pesajes\n                                </a>\n                            </div>\n                            <div id=\"collapsePesaje\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionMenu\">\n                                <div class=\"card-body\">\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/pesajes/nuevo-pesaje']\">\n                                            Realizar Pesaje\n                                        </a>\n                                    </li>\n\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/pesajes/listar-pesaje']\">\n                                            Visualizar Pesajes\n                                        </a>\n                                    </li>\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/pesajes/deshabilitar-pesaje']\">\n                                            Configurar Pesajes\n                                        </a>\n                                    </li>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\">\n                            <div class=\"card-header\" id=\"headingOne\">\n\n                                <a class=\"item\" data-toggle=\"collapse\" data-target=\"#collapseProduct\" aria-expanded=\"false\"\n                                    aria-controls=\"collapseOne\">\n                                    <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>\n                                    Productos\n                                </a>\n                            </div>\n\n                            <div id=\"collapseProduct\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionMenu\">\n                                <div class=\"card-body\">\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/catalogo/new']\">\n                                            Registrar Producto\n\n                                        </a>\n                                    </li>\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/catalogo']\">\n                                            Lista de Productos\n\n                                        </a>\n                                    </li>\n                                    \n                                </div>\n                            </div>\n\n                        </div>\n                        <div class=\"card\">\n                          <div class=\"card-header\" id=\"headingOne\">\n\n                              <a class=\"item\" data-toggle=\"collapse\" data-target=\"#collapseSilos\" aria-expanded=\"false\"\n                                  aria-controls=\"collapseOne\">\n                                  <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i>\n                                  Silos\n                              </a>\n                          </div>\n\n                          <div id=\"collapseSilos\" class=\"collapse show\" aria-labelledby=\"headingOne\"\n                              data-parent=\"#accordionMenu\">\n                              <div class=\"card-body\">\n                                  <li class=\"nav-item\">\n                                      <a class=\"nav-link\" [routerLink]=\"['/silos/new']\">\n                                          Registrar Silo\n\n                                      </a>\n                                    </li>\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/silos']\">\n                                          Lista de Silos\n\n                                      </a>\n                                    </li>\n                                    <li class=\"nav-item\">\n                                        <a class=\"nav-link\" [routerLink]=\"['/silos/configure']\">\n                                          Configurar Silos\n\n                                      </a>\n                                    </li>\n                                </div>\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n                </ul>\n\n\n            </div>\n\n\n        </ng-sidebar>\n\n        <!-- Page Header -->\n        <div ng-sidebar-content>\n\n            <nav class=\"navbar navbar-expand-md navbar-dark \">\n                <a class=\"icon\" (click)=\"toggleSidebar()\" *ngIf=\"this.status && !this.isRegular\"><i class=\"fa fa-bars fa-2x\"></i><span\n                        class=\"sr-only\">(current)</span></a>\n                <ul class=\"nav mx-auto text-center\">\n\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" [routerLink]=\"['/home']\">Home</a>\n                    </li>\n                    <li class=\"nav-item\" *ngIf=\"this.status && !this.isRegular\">\n                        <a class=\"nav-link\" [routerLink]=\"['/clientes']\">Pedidos</a>\n                    </li>\n                    <li class=\"nav-item\" *ngIf=\"this.status && !this.isRegular && isAdmin\">\n                        <a class=\"nav-link\" [routerLink]=\"['/users/list']\">Usuarios</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" *ngIf=\"this.status && !this.isRegular\" [routerLink]=\"['/estadisticas']\">Estadisticas</a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" *ngIf=\"this.status && !this.isRegular\" [routerLink]=\"['/catalogo']\">Catologo</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" *ngIf=\"this.status && this.isRegular\" [routerLink]=\"['/pedidos']\">Pedidos</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" *ngIf=\"this.status && this.isRegular\" [routerLink]=\"['/pedidos-list']\">Mis Pedidos</a>\n                    </li>\n\n                </ul>\n                <div class=\"dropleft\">\n                    <a data-toggle=\"dropdown\" aria-expanded=\"false\"><img src=\"../../../assets/user.png\" alt=\"user\" width=\"40px\" height=\"40px\"></a>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" [routerLink]=\"['/signin']\" *ngIf=\"!this.status\">\n                            <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> Iniciar Sesión</a>\n                        <a class=\"dropdown-item\" [routerLink]=\"['/signup']\" *ngIf=\"!this.status\">\n                            <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i> Registrarse\n                        </a>\n\n\n                        <a class=\"dropdown-item\" *ngIf=\"this.status\">\n                            Bienvenido {{this.nombre}} !!\n                        </a>\n                        <a class=\"dropdown-item\" *ngIf=\"this.status\">\n                            Usuario :<span style=\"color: red;\">{{this.rol}}</span>\n                        </a>\n                        <a class=\"dropdown-item\" *ngIf=\"this.status\" (click)=\"cerrarSesion()\"><i class=\"fa fa-sign-out\"\n                                aria-hidden=\"true\"></i>\n                            Cerrar Sesión</a>\n                    </div>\n                </div>\n\n\n\n            </nav>\n\n            <!--body-->\n            <router-outlet></router-outlet>\n\n        </div>\n    </ng-sidebar-container>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Photo } from 'src/app/interfaces/photo';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-create-pedidos',\n  templateUrl: './create-pedidos.component.html',\n  styleUrls: ['./create-pedidos.component.css']\n})\nexport class CreatePedidosComponent implements OnInit {\n  id: string;\n  user: string;\n  product: any;\n  formPedido: FormGroup;\n  cantidad: number;\n  constructor(private photoService: PhotoService, private authService: AuthService, private pedidoService: PedidoService, private formBuilder: FormBuilder) {\n\n    this.formPedido = this.formBuilder.group({\n      producto: [{ value: '', disabled: true }, [Validators.required]],\n      cliente: [{ value: '', disabled: true }, [Validators.required]],\n      cantidad: ['', [Validators.required]],\n      precio: [{ value: '', disabled: true }, [Validators.required]]\n    });\n\n  }\n  cargarDatos() {\n    const url = window.location.pathname;\n    this.id = url.split('/')[2];\n    this.user = this.authService.getUserID();\n\n\n  }\n  ngOnInit() {\n    this.cargarDatos();\n    this.getPhoto();\n  }\n\n\n  generatePrice(data) {\n    setTimeout(() => {\n      this.cantidad = (data.target.value)\n      this.formPedido.patchValue({\n        precio: this.cantidad * parseInt(this.product.price)\n      })\n\n    }, 500);\n\n  }\n  getPhoto() {\n    this.photoService.getPhoto(this.id).subscribe(\n      response => {\n        if (response) {\n          this.product = response;\n\n        }\n      }, err =>console.log(err)\n    )\n  }\n\n  onSubmit() {\n    this.formPedido = this.formBuilder.group({\n      producto: this.id,\n      cliente: this.user,\n      cantidad: this.cantidad,\n      precio: this.cantidad * parseInt(this.product.price),\n    });\n\n    this.pedidoService.savePedido(this.formPedido.value)\n      .subscribe(\n        (response) => {\n          Swal.fire({\n            title: \"Se ha registrado tu pedido exitosamente!!\",\n            icon: 'success'\n          });\n          this.formPedido.reset();\n\n        },\n        err => {\n          console.log(err);\n        Swal.fire({\n          title: `No se ha podido registrar tu pedido`,\n          icon: 'error'\n        });\n        }\n      )\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"card\" class=\"col-4\">\n        <div class=\"card-header\">\n            <h3 class=\"card-title\">Solicitar Pedido</h3>\n        </div>\n        <form [formGroup]=\"formPedido\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n            <div class=\"card-content\">\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"producto\" class=\"form-control d-none\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"cliente\" class=\"form-control d-none \">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"cantidad\" class=\"form-label\">Cantidad</label>\n                    <input type=\"number\" formControlName=\"cantidad\" class=\"form-control\" (keyup)=\"generatePrice($event)\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"precio\" class=\"form-label\">Precio</label>\n                    <input type=\"number\" formControlName=\"precio\" class=\"form-control\">\n                </div>\n\n\n            </div>\n\n            <div class=\"card-footer\">\n                <button type=\"submit\" [disabled]=\"!formPedido.valid\" class=\"btn btn-primary\">Solicitar</button>\n                <button type=\"button\" class=\"btn btn-danger\">Cancelar</button>\n\n            </div>\n\n        </form>\n\n\n    </div>\n\n\n\n\n</div>","import { Component, OnInit  } from '@angular/core';\nimport { PedidoService } from 'src/app/services/pedido.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport { Photo } from 'src/app/interfaces/photo';\nimport { Route } from '@angular/router';\n\n@Component({\n  selector: 'app-list-pedidos',\n  templateUrl: './list-pedidos.component.html',\n  styleUrls: ['./list-pedidos.component.css']\n})\nexport class ListPedidosComponent implements OnInit {\n  misPedidos: any;\n  id: string;\n  formProducto: FormGroup;\n  producto:Photo;\n  img:string='./assets/no-image.png';\n\n  constructor(private pedidoService: PedidoService,private photoService: PhotoService, private authService: AuthService, private formBuilder: FormBuilder) {\n    this.formProducto = this.formBuilder.group({\n      nombre: {value:'',disabled:true},\n      description: {value:'',disabled:true},\n      precio: {value:'',disabled:true},\n      photoInput: {value:'',disabled:true},\n\n    });\n  }\n\n\n  ngOnInit(): void {\n\n    this.id = this.authService.getUserID();\n    this.pedidoService.getMisPedidos(this.id).subscribe(res => {\n      this.misPedidos = res;\n\n    },\n      err => console.log(err)\n    );\n\n  }\n  cargarProducto(id: string) {\n    this.id = id;\n    this.photoService.getPhoto(id).subscribe(\n      res => {\n        this.producto=res;\n      }\n    );\n    setTimeout(()=>{this.actualizar()},1000)\n\n\n  }\n  actualizar(){\n    this.formProducto.patchValue({\n      nombre:this.producto.title,\n      description:this.producto.description,\n      precio:this.producto.price,\n      photoInput:this.producto.imagePath\n    });\n    this.img='/'+this.producto.imagePath\n    \n  }\n  \n\n\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3>Lista de pedidos</h3>\n        </div>\n        <div class=\"card-body table-responsive\">\n           <table class=\"table table-striped table-hover\">\n               <thead class=\"thead-dark\">\n                   <tr>\n                       <th scope=\"col\">N°</th>\n                       <th scope=\"col\">Cantidad</th>\n                       <th scope=\"col\">Total</th>\n                       <th scope=\"col\">Estado</th>\n                       <th scope=\"col\">Fecha</th>\n                       <th scope=\"col\">Actualizado</th>\n                       <th scope=\"col\">Accion</th>\n\n                   </tr>\n               </thead>\n               <tbody>\n                   <tr class=\"table-light\" *ngFor=\"let pedido of this.misPedidos, let i= index\">\n                       <th scope=\"row\">{{i+1}}</th>\n                       <td>{{pedido.cantidad}}</td>\n                       <td>{{pedido.precio | currency:'CLP':true:'4.0-0'}}</td>\n                       <td style=\"color: #007bff;\" *ngIf=\"pedido.status\"><b>Habilitado</b></td>\n                       <td style=\"color: red;\" *ngIf=\"!pedido.status\"><b> No Habilitado</b></td>\n                       <td>{{pedido.createdAt | date:'dd/MM/yyyy'}}</td>\n                       <td>{{pedido.updatedAt | date:'dd/MM/yyyy'}}</td>\n                       <td>\n                           <button type=\"button\" data-toggle=\"modal\"\n                           (click)=\"cargarProducto(pedido.producto)\"\n                           data-target=\"#descriptionProduct\" class=\"btn btn-primary\">Ver Producto</button>\n                       </td>\n\n                       \n\n                   </tr>\n               </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"descriptionProduct\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"descriptionProductLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"descriptionProductLabel\">Descripción del producto</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"row mx-auto\">\n        \n            <div class=\"col-6 mx-auto\">\n                <div class=\"form-content\">\n                    <form  [formGroup]=\"formProducto\" >\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Photo's Title\" \n                            formControlName=\"nombre\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"description\">Descripción </label>\n                            <textarea rows=\"5\" class=\"form-control\" placeholder=\"Photo's Description\"\n                            formControlName=\"description\"></textarea>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Precio</label>\n                            <input type=\"text\" class=\"form-control\"\n                            formControlName=\"precio\" placeholder=\"Photo's price\"\n                            [value]=\"formProducto.get('precio').value | currency:'CLP':true:'4.0-0'\">\n                        </div>\n                        <div class=\"form-group\">\n                          <input type=\"text\" class=\"d-none\" \n                          formControlName=\"photoInput\">\n\n                        </div>\n                    </form>\n    \n                </div>\n            </div>\n            <div class=\"col-6 mx-auto\">\n             \n              <img [src]=\"this.img\" class=\"img-fluid\">\n          </div>\n           \n\n\n\n        </div>\n    \n          \n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pedidos',\n  templateUrl: './pedidos.component.html',\n  styleUrls: ['./pedidos.component.css']\n})\nexport class PedidosComponent implements OnInit {\n  idProduct:string;\n  \n  constructor(private route:Router) { }\n\n  ngOnInit(): void {\n  }\n  recibirId(id:string){\n    this.idProduct=id;\n    this.route.navigate(['/pedido/'+id]);\n    \n    \n  }\n\n}\n","<div class=\"\">\n    <app-photo-list (enviarId)=recibirId($event)></app-photo-list>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { IPesaje } from 'src/app/interfaces/pesaje';\nimport { PesajeService } from 'src/app/services/pesaje.service';\nimport {Global} from '../../../global';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { PhotoService } from 'src/app/services/photo.service';\n\n@Component({\n  selector: 'app-deshabilitar-pesaje',\n  templateUrl: './deshabilitar-pesaje.component.html',\n  styleUrls: ['./deshabilitar-pesaje.component.css']\n})\nexport class DeshabilitarPesajeComponent implements OnInit {\n  public pesajes:IPesaje[]=[];\n  public url:string;\n  formPesaje:FormGroup;\n  guardarId:string;\n  productos:any;\n  status:boolean;\n  constructor(private pesajeService:PesajeService, private formBuilder:FormBuilder,private photoService:PhotoService ){\n    this.url=Global.url;\n    this.formPesaje=this.formBuilder.group({\n      nombre:['',[Validators.required]],\n      rut:['',[Validators.required]],\n      razonSocial:['',[Validators.required]],\n      pesoEntrada:['',[Validators.required]],\n      pesoSalida:['',[Validators.required]],\n      tipoTransaccion:['',Validators.required],\n      patente:['',Validators.required],\n      tipoVehiculo:['',Validators.required],\n      tipoProducto:['',Validators.required],\n\n\n   });\n\n   }\n\n  ngOnInit(): void {\n    this.getPesajes();\n    this.photoService.getPhotos().subscribe(res=>{\n      this.productos=res;\n    });\n   this.verify();\n   \n   \n  }\n  getPesajes(){\n    this.pesajeService.obtenerPesajes().subscribe(\n      response=>{\n        if(response){\n          this.pesajes=response;\n          \n        }\n      },err=>console.log(err)\n    \n    );\n    this.verify();\n  }\n  eliminar(id:any){\n    this.pesajeService.deletePesaje(id).subscribe(\n      res=>{\n        Swal.fire({\n          title:'Se ha eliminado exitosamente el pesaje!!',\n          icon:'success'\n        });\n        this.getPesajes();\n\n\n      }\n    );\n    \n\n  }\n  verify(){\n    if (this.pesajes.length!=0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n  }\n  cargarDatos(pesaje:any, id:string){\n    this.formPesaje=this.formBuilder.group({\n      nombre:pesaje.nombre,\n      rut:pesaje.rut,\n      razonSocial:pesaje.razonSocial,\n      pesoEntrada:pesaje.pesoEntrada,\n      pesoSalida:pesaje.pesoSalida,\n      tipoTransaccion:pesaje.tipoTransaccion,\n      patente:pesaje.patente,\n      tipoVehiculo:pesaje.tipoVehiculo,\n      tipoProducto:pesaje.tipoProducto\n    }) \n    this.guardarId=id;\n \n     \n\n\n  }\n  onSubmit(){\n    this.pesajeService.updatePesaje(this.guardarId,this.formPesaje.value).subscribe(\n      res=>{\n        this.getPesajes();\n        document.getElementById('updatemodal').click();\n        Swal.fire({\n          icon:'success',\n          text:'Los datos se han actualizado exitosamente!!'\n        })\n        \n    },error=>{\n      Swal.fire({\n        icon:'error',\n        text:'Error al actualizar los datos por favor verifique la información'\n      })\n    })\n    \n  }\n  \n}\n","<div class=\"container\">\n    <h3 id=\"title-table\" class=\"text-center\"><b> Configuración de pesajes</b></h3>\n    <table class=\"table\">\n        <thead class=\"thead-light\">\n            <tr>\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Rut</th>\n                <th scope=\"col\">Patente</th>\n                <th scope=\"col\">Fecha</th>\n                <th scope=\"col\">Tipo de Producto</th>\n                <th scope=\"col\">Acción</th>\n            </tr>    \n        </thead>\n        <tbody>\n            <tr *ngFor=\"let pesaje of pesajes\" class=pesaje>\n                <td>{{pesaje.nombre}}</td>\n                <td>{{pesaje.rut}}</td>\n                <td>{{pesaje.patente}}</td>\n                <td>{{pesaje.createdAt | date:'dd/MM/yyyy'}}</td>\n                <td>{{pesaje.tipoProducto}}</td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#updatemodal\" (click)=\"cargarDatos(pesaje,pesaje._id)\">Actualizar</button>\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"eliminar(pesaje._id)\">Eliminar</button>\n                </td>\n            </tr>\n            <tr *ngIf=\"this.status\" class=\"text-center\">\n                <td colspan=\"6  \">No existe ningun pesaje</td>\n            </tr>\n            \n        </tbody>\n    </table>\n\n</div>\n<div class=\"modal fade\" id=\"updatemodal\" tabindex=\"-1\" role=\"dailog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <form [formGroup]=formPesaje (ngSubmit)=\"onSubmit()\" novalidate>\n\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Actualizar pesaje</h4>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">x</button>\n                </div>\n                <div class=\"moda-body\">\n                    <h5>Cliente</h5>\n\n\n                    <div class=\"form-group\">\n                        <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                        <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre\">\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"rut\" class=\"form-label\">Rut</label>\n                        <input type=\"text\" formControlName=\"rut\" class=\"form-control\" placeholder=\"Rut\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"razonSocial\">Razón Social</label>\n                        <input type=\"text\" formControlName=\"razonSocial\" class=\"form-control\" placeholder=\"Razón Social\">\n\n                    </div>\n\n                    <h5 class=\"card-title\">Detalles</h5>\n                    <div class=\"form-group\">\n                        <label for=\"pesoEntrada\" class=\"form-label\">Peso de entrada</label>\n                        <input type=\"number\" formControlName=\"pesoEntrada\" class=\"form-control\" placeholder=\"Peso de Entrada\">\n\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"pesoSalida\" class=\"form-label\">Peso de salida</label>\n                        <input type=\"number\" formControlName=\"pesoSalida\" class=\"form-control\" placeholder=\"Peso de Salida\">\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"tipoTransaccion\"> Tipo de transaccion</label>\n                        <select type=\"string\" formControlName=\"tipoTransaccion\" class=\"form-control\">\n                            <option value=\"Compra\">Compra</option>\n                            <option value=\"Venta\">Venta</option>\n                        </select>\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"tipoProducto\">Tipo de Producto</label>\n                        <select formControlName=\"tipoProducto\" class=\"form-control\">\n                            <option *ngFor=\"let item of productos\" value=\"{{item.title}}\">{{item.title}}</option>\n    \n                        </select>\n                    </div>\n                    <h5 class=\"card-title\"> Vehiculo</h5>\n                    <div class=\"form-group\">\n                        <label for=\"patente\" class=\"form-label\">Patente</label>\n                        <input type=\"text\" formControlName=\"patente\" class=\"form-control\" placeholder=\"Patente\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"tipoVehiculo\">Tipo de Vehiculo</label>\n                        <select type=\"string\" formControlName=\"tipoVehiculo\" class=\"form-control\">\n                            <option value=\"Camión\">Camión</option>\n                            <option value=\"Camioneta\">Camioneta</option>\n                            <option value=\"Auto\">Auto</option>\n                        </select>\n                    </div>\n\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Actualizar</button>\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cerrar</button>\n\n                </div>\n\n\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { PesajeService } from 'src/app/services/pesaje.service';\nimport { Global } from '../../../global';\nimport * as jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as html2pdf from 'html2pdf.js';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IPesaje } from 'src/app/interfaces/pesaje';\n\n@Component({\n  selector: 'app-listar-pesajes',\n  templateUrl: './listar-pesajes.component.html',\n  styleUrls: ['./listar-pesajes.component.css'],\n  providers: [PesajeService]\n})\nexport class ListarPesajesComponent implements OnInit {\n  public pesajes: IPesaje[]=[];\n  public url: string;\n  formPesaje: FormGroup;\n  details: FormGroup;\n  nombre: string;\n  rut: string;\n  fechaa: Date;\n  dia:number;\n  mes:number;\n  anio:number;\n  fecha: Date;\n  patente: string;\n  formFiltrado: FormGroup;\n  status:boolean;\n  @ViewChild('content') content: ElementRef;\n\n\n\n  constructor(private pesajeService: PesajeService, private formBuilder: FormBuilder) {\n    this.url = Global.url;\n    this.formPesaje = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      rut: ['', [Validators.required]],\n      razonSocial: ['', [Validators.required]],\n      pesoEntrada: ['', [Validators.required]],\n      pesoSalida: ['', [Validators.required]],\n      tipoTransaccion: ['', Validators.required],\n      patente: ['', Validators.required],\n      tipoVehiculo: ['', Validators.required],\n      tipoProducto: ['', Validators.required],\n\n\n    })\n    this.url = Global.url;\n\n  }\n\n  ngOnInit(): void {\n    this.getPesajes();\n    this.verify();\n    \n\n  }\n  verify(){\n    if (this.pesajes.length!=0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n  }\n  getPesajes() {\n    this.pesajeService.obtenerPesajes().subscribe(\n      response => {\n        if (response) {\n          this.pesajes = response;\n          \n\n\n        }\n      }, err => {\n          console.log(err);\n          \n      }\n    );\n    this.verify();\n   \n    \n  }\n  cargarDatos(pesaje: any) {\n    this.formPesaje = this.formBuilder.group({\n      nombre: pesaje.nombre,\n      rut: pesaje.rut,\n      razonSocial: pesaje.razonSocial,\n      pesoEntrada: pesaje.pesoEntrada,\n      pesoSalida: pesaje.pesoSalida,\n      tipoTransaccion: pesaje.tipoTransaccion,\n      patente: pesaje.patente,\n      tipoVehiculo: pesaje.tipoVehiculo,\n      tipoProducto: pesaje.tipoProducto\n    });\n  }\n  cargarpdf(pesaje: any) {\n    this.details = this.formBuilder.group({\n      nombre: pesaje.nombre,\n      rut: pesaje.rut,\n      razonSocial: pesaje.razonSocial,\n      pesoEntrada: pesaje.pesoEntrada,\n      pesoSalida: pesaje.pesoSalida,\n      tipoTransaccion: pesaje.tipoTransaccion,\n      patente: pesaje.patente,\n      tipoVehiculo: pesaje.tipoVehiculo,\n      tipoProducto: pesaje.tipoProducto\n    });\n\n\n  }\n  VerPesaje(event: Event, pesaje: any) {\n    event.preventDefault();\n    this.cargarDatos(pesaje);\n\n  }\n  public downloadPDF(): void {\n    let DATA = document.getElementById('htmlData');\n    let pdf = new jsPDF({\n      orientation: '1',\n      unit: 'pt',\n      format: 'a4'\n    });\n    pdf.text(\"Listado de Pesajes\", 200, 30);\n    autoTable(pdf, { html: '#htmlData' })\n    pdf.save('angular-demo.pdf');\n  }\n\n  searchNombre() {\n    if (this.nombre != \"\") {\n      this.pesajes = this.pesajes.filter(res => {\n        return res.nombre.toLocaleLowerCase().match(this.nombre.toLocaleLowerCase());\n      });\n    } else if (this.nombre == \"\") {\n      this.ngOnInit();\n    }\n\n  }\n  searchRut() {\n    if (this.rut != \"\") {\n      this.pesajes = this.pesajes.filter(res => {\n        return res.rut.toLocaleLowerCase().match(this.rut.toLocaleLowerCase());\n      });\n    } else if (this.rut == \"\") {\n      this.ngOnInit();\n    }\n\n  }\n  searchPatente() {\n    if (this.patente != \"\") {\n      this.pesajes = this.pesajes.filter(res => {\n        return res.patente.toLocaleLowerCase().match(this.patente.toLocaleLowerCase());\n      });\n    } else if (this.patente == \"\") {\n      this.ngOnInit();\n    }\n\n  }\n  searchFecha() {\n    if (this.fecha != null) {\n      this.pesajes = this.pesajes.filter(res => {\n        return res.createdAt.toString().match(this.fecha.toString());\n\n      });\n    } else if (this.fecha == null) {\n      this.ngOnInit();\n    }\n\n  }\n\n  changeFilter(value: string) {\n    const inputName = document.getElementById('filterName');\n    const inputRut = document.getElementById('filterRut');\n    const inputPatente = document.getElementById('filterPatente');\n    const inputFecha = document.getElementById('filterFecha');\n\n    if (value == \"nombre\") {\n      this.ngOnInit();\n      inputName.style.display = \"\";\n      inputRut.style.display = \"none\";\n      inputPatente.style.display = \"none\";\n      inputFecha.style.display = \"none\";\n      this.fecha = null;\n      this.nombre = \"\";\n      this.patente = \"\";\n      this.rut = \"\";\n    } else {\n      if (value == \"rut\") {\n        this.ngOnInit();\n        inputName.style.display = \"none\";\n        inputRut.style.display = \"\";\n        inputPatente.style.display = \"none\";\n        inputFecha.style.display = \"none\";\n        this.fecha = null;\n        this.nombre = \"\";\n        this.patente = \"\";\n        this.rut = \"\";\n      } else {\n        if (value == \"patente\") {\n          this.ngOnInit();\n          inputName.style.display = \"none\";\n          inputRut.style.display = \"none\";\n          inputPatente.style.display = \"\";\n          inputFecha.style.display = \"none\";\n          this.fecha = null;\n          this.nombre = \"\";\n          this.patente = \"\";\n          this.rut = \"\";\n        } else {\n          if (value == \"fecha\") {\n            this.ngOnInit();\n            inputName.style.display = \"none\";\n            inputRut.style.display = \"none\";\n            inputPatente.style.display = \"none\";\n            inputFecha.style.display = \"\";\n            this.fecha = null;\n            this.nombre = \"\";\n            this.patente = \"\";\n            this.rut = \"\";\n          }\n        }\n      }\n    }\n\n\n  }\n  public downloadPDFToday(): void {\n    let pdf = new jsPDF({\n      orientation: '2',\n      unit: 'pt',\n      format: 'a4'\n    });\n\n    let values: any;\n    var pesajesToday: IPesaje[] = [];\n    var todayDate = new Date().toISOString().slice(0, 10);\n    for (let i in this.pesajes) {\n      let created = this.pesajes[i].createdAt.toString();\n      let date = created.substr(0, 10);\n      if (date == todayDate) {\n        pesajesToday.push(this.pesajes[i]);\n      }\n\n    }\n\n    for (let i in pesajesToday) {\n      delete pesajesToday[i]['_id']\n      delete pesajesToday[i]['razonSocial']\n      delete pesajesToday[i]['pesoEntrada']\n      delete pesajesToday[i]['pesoSalida']\n      delete pesajesToday[i]['tipoVehiculo']\n      delete pesajesToday[i]['updatedAt']\n      delete pesajesToday[i]['createdAt']\n      delete pesajesToday[i]['__v']\n\n    }\n    let data = pesajesToday;\n    values = data.map((elemento) => Object.values(elemento));\n\n    pdf.text(\"Lista de pesajes del dia \" + todayDate, 180, 30)\n    autoTable(pdf,\n      {\n        head: [[\"Nombre\", \"Rut\", \"tipo de Transacción\", \"Patente\", \"Tipo de Producto\"]],\n        body: values,\n      })\n\n    pdf.save('pesajesdehoy.pdf');\n  }\n  public downloadUnique(): void {\n    const options = {\n      filename: \"detalles_de_pesaje.pdf\",\n      image: { type: 'jpeg' },\n      html2canvas: {}\n    }\n    const content: Element = document.getElementById('content');\n\n    html2pdf()\n\n      .from(content)\n      .set(options)\n      .save()\n\n  }\n\n}\n\n\n\n\n","<div class=\"container\">\n    <h3 id=\"title-table\" class=\"text-center\"><b> Listado de Pesajes</b></h3>\n    <br>\n\n    <br>\n\n    <div class=\"row\">\n        <div class=\"side\">\n            <div class=\"left\">\n                <label>Filtrado por: </label>\n                <select name=\"filtered\" #filtered (change)='changeFilter(filtered.value)' class=\"\">\n                    <option value=\"nombre\">Nombre</option>\n                    <option value=\"rut\">Rut</option>\n                    <option value=\"patente\">Patente</option>\n                    <option value=\"fecha\">Fecha</option>\n\n                </select>\n                <input type=\"text\" [(ngModel)]=\"nombre\" id=\"filterName\" (input)=\"searchNombre()\" />\n                <input type=\"text\" style=\"display: none;\" [(ngModel)]=\"rut\" id=\"filterRut\" (input)=\"searchRut()\" />\n                <input type=\"text\" style=\"display: none;\" [(ngModel)]=\"patente\" id=\"filterPatente\"\n                    (input)=\"searchPatente()\" />\n                <input type=\"date\" style=\"display: none;\" [(ngModel)]=\"fecha\" id=\"filterFecha\"\n                    (input)=\"searchFecha()\" />\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"downloadPDF()\">Generar PDF</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"downloadPDFToday()\">Generar PDF del dia</button>\n            </div>\n\n        </div>\n        <table class=\"table table-striped  table-hover\" id=\"htmlData\" #htmlData>\n            <thead class=\"thead-light\">\n                <tr style=\"width: auto;\">\n                    <th scope=\"col\">Nombre</th>\n                    <th scope=\"col\">Rut</th>\n                    <th scope=\"col\">Patente</th>\n                    <th scope=\"col\">Fecha</th>\n                    <th scope=\"col\">Tipo de Producto</th>\n\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let pesaje of pesajes\" class=\"pesaje\" (click)=\"VerPesaje($event,pesaje)\" data-toggle=\"modal\"\n                    data-target=\"#updatemodal\">\n                    <td>{{pesaje.nombre}}</td>\n                    <td>{{pesaje.rut}}</td>\n                    <td>{{pesaje.patente}}</td>\n                    <td>{{pesaje.createdAt | date:'dd/MM/yyyy'}}</td>\n                    <td>{{pesaje.tipoProducto}}</td>\n\n                </tr>\n                <tr>\n                <tr *ngIf=\"this.status\" class=\"text-center\">\n                    <td colspan=\"6\">No existe ningun pesaje</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n\n</div>\n<div class=\"modal fade\" id=\"updatemodal\" role=\"dailog\">\n    <div class=\"modal-dialog \">\n        <div class=\"modal-content\">\n            <form [formGroup]=formPesaje novalidate id=\"export\">\n\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" id=\"modalclose\" data-dismiss=\"modal\">x</button>\n                </div>\n\n                <div id=\"content\" class=\"modal-body\">\n                    <h4 class=\"text-center\"><b>Información del Pesaje</b></h4>\n                    <div class=\"client\">\n                        <h5><b>Cliente</b></h5>\n                        <br>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                            <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" [attr.disabled]=\"true\"\n                                placeholder=\"Nombre\">\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"rut\" class=\"form-label\">Rut</label>\n                            <input type=\"text\" formControlName=\"rut\" class=\"form-control\" [attr.disabled]=\"true\"\n                                placeholder=\"Rut\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"razonSocial\">Razón Social</label>\n                            <input type=\"text\" formControlName=\"razonSocial\" class=\"form-control\" [attr.disabled]=\"true\"\n                                placeholder=\"Razón Social\">\n\n                        </div>\n\n                    </div>\n                    <div class=\"details\">\n\n                        <h5><b>Detalles</b></h5>\n                        <br>\n                        <div class=\"form-group\">\n                            <label for=\"pesoEntrada\" class=\"form-label\">Peso de entrada</label>\n                            <input type=\"number\" formControlName=\"pesoEntrada\" class=\"form-control\"\n                                [attr.disabled]=\"true\" placeholder=\"Peso de Entrada\">\n\n\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"pesoSalida\" class=\"form-label\">Peso de salida</label>\n                            <input type=\"number\" formControlName=\"pesoSalida\" class=\"form-control\"\n                                [attr.disabled]=\"true\" placeholder=\"Peso de Salida\">\n\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"tipoTransaccion\"> Tipo de transaccion</label>\n                            <input type=\"string\" formControlName=\"tipoTransaccion\" class=\"form-control\"\n                                [attr.disabled]=\"true\" placeholder=\"Tipo de transaccion\">\n                        </div>\n                    </div>\n                    <div class=\"type_P\">\n                        <div class=\"form-group col-5\">\n                            <label for=\"tipoProducto\"> Tipo de Producto</label>\n                            <input type=\"string\" formControlName=\"tipoProducto\" class=\"form-control\"\n                                [attr.disabled]=\"true\" placeholder=\"Tipo de producto\">\n                        </div>\n\n                    </div>\n\n\n\n                    <div class=\"vehicle\">\n                        <h5 class=\"text-center\"><b>Detalles del Vehiculo </b> </h5>\n                        <div class=\"form-group\">\n                            <label for=\"patente\" class=\"form-label\">Patente</label>\n                            <input type=\"text\" formControlName=\"patente\" class=\"form-control\" [attr.disabled]=\"true\"\n                                placeholder=\"Patente\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"tipoVehiculo\">Tipo de Vehiculo</label>\n                            <input type=\"text\" formControlName=\"tipoVehiculo\" class=\"form-control\"\n                                [attr.disabled]=\"true\" placeholder=\"Tipo de vehiculo\">\n                        </div>\n                    </div>\n\n\n                </div>\n\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"downloadUnique()\">generar Pdf</button>\n                    <button type=\"button\" class=\"btn btn-danger\" id=\"btnmodal\" data-dismiss=\"modal\">Cerrar</button>\n\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormBuilder,FormControl, Validators} from '@angular/forms';\nimport { PesajeService } from 'src/app/services/pesaje.service';\nimport Swal from 'sweetalert2'; \nimport { PhotoService } from 'src/app/services/photo.service';\n@Component({\n  selector: 'app-nuevo-pesaje',\n  templateUrl: './nuevo-pesaje.component.html',\n  styleUrls: ['./nuevo-pesaje.component.css']\n})\nexport class NuevoPesajeComponent implements OnInit {\n  productos:any;\n  formPesaje:FormGroup;\n\n  constructor(private pesajeService:PesajeService ,private formBuilder:FormBuilder, private photoService:PhotoService) { \n    this.formPesaje=this.formBuilder.group({\n       nombre:['',[Validators.required]],\n       rut:['',[Validators.required]],\n       razonSocial:['',[Validators.required]],\n       pesoEntrada:['',[Validators.required]],\n       pesoSalida:['',[Validators.required]],\n       tipoTransaccion:['',[Validators.required]],\n       patente:['',[Validators.required,Validators.maxLength(6)]],\n       tipoVehiculo:['',[Validators.required]],\n       tipoProducto:['',[Validators.required]]\n\n    })\n  }\n\n  ngOnInit(): void {\n    this.photoService.getPhotos().subscribe(res=>{\n      this.productos=res;\n      \n    })\n  }\n\n  onSubmit(){\n    this.pesajeService.guardarPesaje(this.formPesaje.value).\n      subscribe(\n        (data)=>{\n          \n        \n          Swal.fire({\n            title:'Se ha registrado exitosamente el pesaje!!',\n            icon:'success'\n          });\n          \n      \n      })\n    \n  }\n  \n\n}\n","<div class=\"container mx-auto\">\n    <h3><b> Ingresar Pesajes </b></h3>\n    <br>\n    <form [formGroup]=\"formPesaje\" (ngSubmit)=\"onSubmit()\" novalidate class=\"mx-auto\">\n        <div class=\"client card\">\n\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Cliente</h5>\n                <div class=\"form-group\">\n                    <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                    <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre\">\n                    <div *ngIf=\"formPesaje.get('nombre').errors && (formPesaje.get('nombre').touched\n                                || formPesaje.get('nombre').dirty)\" class=\"alert alert-danger\">\n                        El Nombre es obligatorio\n                    </div>\n\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"rut\" class=\"form-label\">Rut</label>\n                    <input type=\"text\" formControlName=\"rut\" class=\"form-control\" placeholder=\"Rut\"\n                    >\n                    <div *ngIf=\"formPesaje.get('rut').errors && (formPesaje.get('rut').touched\n                                || formPesaje.get('rut').dirty)\" class=\"alert alert-danger\">\n                        El Rut es obligatorio\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"razonSocial\">Razón Social</label>\n                    <input type=\"text\" formControlName=\"razonSocial\" class=\"form-control\" placeholder=\"Razón Social\">\n                    <div *ngIf=\"formPesaje.get('razonSocial').errors && (formPesaje.get('razonSocial').touched\n                                    || formPesaje.get('razonSocial').dirty)\" class=\"alert alert-danger\">\n                        La razón social es obligatoria\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"details card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Detalles</h5>\n                <div class=\"form-group\">\n                    <label for=\"pesoEntrada\" class=\"form-label\">Peso de entrada</label>\n                    <input type=\"number\" formControlName=\"pesoEntrada\" class=\"form-control\"\n                        placeholder=\"Peso de Entrada\">\n                    <div *ngIf=\"formPesaje.get('pesoEntrada').errors && (formPesaje.get('pesoEntrada').touched\n                                || formPesaje.get('pesoEntrada').dirty)\" class=\"alert alert-danger\">\n                        El Peso de entrada obligatorio\n                    </div>\n\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"pesoSalida\" class=\"form-label\">Peso de salida</label>\n                    <input type=\"number\" formControlName=\"pesoSalida\" class=\"form-control\" placeholder=\"Peso de Salida\">\n                    <div *ngIf=\"formPesaje.get('pesoSalida').errors && (formPesaje.get('pesoSalida').touched\n                                || formPesaje.get('pesoSalida').dirty)\" class=\"alert alert-danger\">\n                        El peso de salida es obligatorio\n                    </div>\n\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipoTransaccion\"> Tipo de transaccion</label>\n                    <select formControlName=\"tipoTransaccion\" class=\"form-control\">\n                        <option value=\"\" selected disabled>Tipo de transaccion</option>\n                        <option value=\"Compra\">Compra</option>\n                        <option selected value=\"Venta\">Venta</option>\n                    </select>\n                    <div *ngIf=\"formPesaje.get('tipoTransaccion').errors && (formPesaje.get('tipoTransaccion').touched\n                                    || formPesaje.get('tipoTransaccion').dirty)\" class=\"alert alert-danger\">\n                        Seleccione alguna opción\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipoProducto\"> Tipo de Producto</label>\n                    <select formControlName=\"tipoProducto\" class=\"form-control\">\n                        <option value=\"\" selected disabled>Tipo de producto</option>\n                        <option *ngFor=\"let item of productos\" value=\"{{item.title}}\">{{item.title}}</option>\n\n                    </select>\n                    <div *ngIf=\"formPesaje.get('tipoProducto').errors && (formPesaje.get('tipoProducto').touched\n                                    || formPesaje.get('tipoProducto').dirty)\" class=\"alert alert-danger\">\n                        Seleccione alguna opción\n                    </div>\n                </div>\n\n\n\n            </div>\n        </div>\n\n        <div class=\"vehicle card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\"> Vehiculo</h5>\n                <div class=\"form-group\">\n                    <label for=\"patente\" class=\"form-label\">Patente</label>\n                    <input type=\"text\" formControlName=\"patente\" class=\"form-control\" placeholder=\"Patente\">\n                </div>\n                <div *ngIf=\"formPesaje.get('patente').errors && (formPesaje.get('patente').touched\n                            || formPesaje.get('patente').dirty)\" class=\"alert alert-danger\">\n                    La Patente es obligatoria\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipoVehiculo\">Tipo de Vehiculo</label>\n                    <select formControlName=\"tipoVehiculo\" class=\"form-control\">\n                        <option value=\"\" selected disabled>Tipo de Vehiculo</option>\n                        <option value=\"Camión\">Camión</option>\n                        <option value=\"Camioneta\">Camioneta</option>\n                        <option value=\"Auto\">Auto</option>\n                    </select>\n\n                </div>\n                <div *ngIf=\"formPesaje.get('tipoVehiculo').errors && (formPesaje.get('tipoVehiculo').touched\n                            || formPesaje.get('tipoVehiculo').dirty)\" class=\"alert alert-danger\">\n                    El Tipo de vehiculo es obligatorio\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n\n            <button type=\"submit\" [disabled]=\"!formPesaje.valid\" class=\"btn btn-primary\">Registrar</button>\n\n        </div>\n\n    </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport Swal from \"sweetalert2\";\n\ninterface HtmlInputEvent extends Event {\n  target:HTMLInputElement & EventTarget;\n}\n@Component({\n  selector: 'app-photo-form',\n  templateUrl: './photo-form.component.html',\n  styleUrls: ['./photo-form.component.css']\n})\nexport class PhotoFormComponent implements OnInit {\n  file:File;\n  photoSelected:ArrayBuffer | string;\n  constructor(private photoService:PhotoService) { }\n\n  ngOnInit(): void {\n  }\n  onPhotoSelected(event:HtmlInputEvent){\n    if(event.target.files && event.target.files[0]){\n        this.file=<File>event.target.files[0];\n\n        const reader=new FileReader();\n        reader.onload= e => this.photoSelected = reader.result;\n        reader.readAsDataURL(this.file);\n        \n    }\n  }\n  uploadPhoto(title:HTMLInputElement, description:HTMLInputElement,price:HTMLInputElement, stock:HTMLInputElement):boolean{\n    \n    if(typeof this.file===\"undefined\" || title.value==\"\" || description.value==\"\" || price.value==\"\" || stock.value==\"\" ){\n      Swal.fire({\n        title:`${'Por favor complete todos los campos'}`,\n        icon:'error'\n      });\n    }else{\n      this.photoService.createPhoto(title.value,description.value,price.value,stock.value,this.file)\n          .subscribe(\n              res=>{\n                Swal.fire({\n                  title:'Se ha registrado exitosamente el producto!!',\n                  icon:'success'\n                });\n                window.open ('catalogo', '_self');\n              }\n                \n          )\n\n    }\n     \n    \n          \n          return false;\n      \n      \n  }\n\n}\n","<div class=\"col-12 col-lg-8 mx-auto p-4 container\">\n    <h3 class=\"text-center\"><b>Registro de Producto</b></h3>\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form (submit)=\"uploadPhoto(title,description,price,stock)\" enctype=\"multipart/form-data\">\n\n                <div class=\"row\">\n                    <div class=\" col-12 col-md-6 col-lg-6 \">\n\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Nombre</label>\n                            <input #title type=\"text\" class=\"form-control\" placeholder=\"ingrese el nombre aqui\"\n                                required>\n                                <div *ngIf=\"title.errors && title.touched ||title.dirty\" class=\"alert alert-danger\">\n                                     El Nombre es obligatorio\n                                </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"descirption\">Descripción del producto</label>\n                            <textarea rows=\"3\" type=\"text\" class=\"form-control\" #description\n                                placeholder=\"ingrese la descripción aqui \" required>\n\n                        </textarea>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Precio (CLP)</label>\n                            <input #price type=\"text\" class=\"form-control\" onkeypress=\"if ( isNaN( String.fromCharCode(event.keyCode) )) return false;\"placeholder=\"ingrese la cantidad aqui\" required placeholder=\"ingrese el Precio aqui\" required>\n\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Stock</label>\n                            <input #stock type=\"text\" class=\"form-control\"   onkeypress=\"if ( isNaN( String.fromCharCode(event.keyCode) )) return false;\"placeholder=\"ingrese la cantidad aqui\" required>\n\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-md-6 col-lg-6 mx-auto\">\n                        <input type=\"file\" class=\"d-none\" #photoInput (change)=\"onPhotoSelected($event)\">\n                        <img [src]=\"photoSelected || './assets/no-image.png'\" class=\"img-fluid \" alt=\"No image\"\n                            (click)=\"photoInput.click()\">\n\n                        <button type=\"submit\" class=\"form-control mt-2 btn btn-success\">Registrar</button>\n\n                    </div>\n\n\n\n                </div>\n\n\n\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Photo } from 'src/app/interfaces/photo';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-photo-list',\n  templateUrl: './photo-list.component.html',\n  styleUrls: ['./photo-list.component.css']\n})\nexport class PhotoListComponent implements OnInit {\n  @Output()\n  enviarId:EventEmitter<string>=new EventEmitter<string>();\n  photos: Photo[] = [];\n  p:number=1;\n\n  constructor(\n    private photoService: PhotoService,\n    private router: Router,\n    private authservive:AuthService\n  ) { }\n\n  ngOnInit() {\n    this.photoService.getPhotos()\n      .subscribe(\n        res => {\n          this.photos = res;\n        },\n        err => console.log(err)\n      )\n  }\n\n  selectedCard(id: string) {\n    let role=this.authservive.getUserRole();\n    if(role==\"regular\"){\n      this.enviarId.emit(id);\n      \n    }else{\n      this.router.navigate(['/catalogo', id]);\n    }\n  \n    \n  }\n\n\n}\n","<div class=\"container mx-auto col-8 col-offset-1 pt-4\">\n    <h2 class=\"text-center\"><b>Lista de Productos</b></h2>\n    <div class=\"products row mx-auto mt-5\">\n        <div *ngFor=\"let photo of photos | paginate:{itemsPerPage:8,currentPage:p}\" class=\"card \" (click)=\"selectedCard(photo._id)\">\n            <div class=\"card-header\">\n                <div class=\"card-title text-center\"><b> {{photo.title}}</b></div>\n            </div>\n            <div class=\"mx-auto\">\n                <img [src]=\"'/' + photo.imagePath\">\n            </div>\n        </div>\n\n    </div>\n    <div class=\"text-center\">\n        <pagination-controls maxSize=\"10\" autoHide=\"true\" previousLabel=\"Anterior\" nextLabel=\"Siguiente\" (pageChange)=\"p = $event\"></pagination-controls>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Photo } from 'src/app/interfaces/photo';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PhotoService } from 'src/app/services/photo.service';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-photo-preview',\n  templateUrl: './photo-preview.component.html',\n  styleUrls: ['./photo-preview.component.css']\n})\nexport class PhotoPreviewComponent implements OnInit {\n\n  id: string;\n  photo: Photo;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private photoService: PhotoService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.id = params['id'];\n      this.photoService.getPhoto(this.id)\n        .subscribe(\n          res => {\n            this.photo = res;\n            \n          },\n          err => console.log(err)\n        )\n    });\n  }\n\n  deletePhoto(id: string) {\n    this.photoService.deletePhoto(id)\n      .subscribe(res => {\n        Swal.fire({\n          title:'Se ha eliminado exitosamente el producto!!',\n          icon:'success'\n        });\n        this.router.navigate(['/catalogo']);\n      })\n  }\n\n  updatePhoto(title: HTMLInputElement, description: HTMLInputElement,price: HTMLInputElement, stock: HTMLInputElement): boolean {\n    this.photoService.updatePhoto(this.photo._id, title.value, description.value, price.value,stock.value)\n      .subscribe(res => {\n        Swal.fire({\n          title:'Se ha editado exitosamente el producto!!',\n          icon:'success'\n        });\n        this.router.navigate(['/catalogo']);\n      });\n    return false;\n  }\n}\n\n\n","<div class=\"row mx-auto\" *ngIf=\"!photo; else main_content\">\n    <h1>Loading...</h1>\n</div>\n<ng-template #main_content>\n\n    <div class=\"container\">\n        <h3 class=\"text-center\"> <b> Actualizar datos del producto </b></h3>\n        <div class=\"row mx-auto content\">\n            <div class=\"card col-5\">\n                <div class=\"card-header\">\n                    <h5 class=\"text-center\"><b>Detalles del producto</b></h5>\n                </div>\n                <div class=\"card-body\">\n                    <form class=\"card-body\" (submit)=\"updatePhoto(title, description,price,stock)\">\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Photo's Title\" [value]=\"photo.title\"\n                                #title>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"description\">Descripción </label>\n                            <textarea rows=\"2\" class=\"form-control\" placeholder=\"Photo's Description\"\n                                [value]=\"photo.description\" #description></textarea>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Precio (CLP)</label>\n                            <input type=\"number\" class=\"form-control\" placeholder=\"Photo's price\" [value]=\"(photo.price)\"\n                                #price>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nombre\">Stock</label>\n                            <input type=\"number\" class=\"form-control\" placeholder=\"Photo's price\" [value]=\"photo.stock\"\n                                #stock>\n                        </div>\n                        <button class=\"btn btn-primary btn-block\">\n                            Actualizar\n                        </button>\n                    </form>\n                    <div class=\" col-md-12 mx-auto\">\n\n                        <button class=\"btn btn-danger btn-block\" (click)=\"deletePhoto(photo._id)\">\n                            Eliminar\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n            <div class=\"card col-5\">\n                    <div class=\"card-header\">\n                        <h5 class=\"text-center\"><b>Imagen del producto</b></h5>\n\n                    <div class=\"card-body \">\n                        <img [src]=\"'/' + photo.imagePath\" class=\"img-fluid\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  formSignin:FormGroup;\n  formEmail:FormGroup;\n  constructor(private authService: AuthService,private userService: UserService, private router: Router,private formBuilder:FormBuilder) {\n      this.formSignin=this.formBuilder.group({\n        email:['',[Validators.required]],\n        password:['',[Validators.required]]\n      });\n      this.formEmail=this.formBuilder.group({\n        email:['',[Validators.required]],\n      })\n  }\n\n  ngOnInit(): void {\n  }\n  signin() {\n     \n    this.authService.signin(this.formSignin.value).subscribe(\n      res => {\n        localStorage.setItem('auth-token', res.token);\n        localStorage.setItem('user', JSON.stringify(res.user));\n        Swal.fire({\n          title: 'Inicio de sesión exitoso',\n          text: \"Bienvenido a Pesajex!\",\n          icon: 'success',\n          timer: 2500\n        }).then((result) => {\n          \n            window.open('/home' , '_self' )\n          \n        })\n        \n      },\n      err => {\n        Swal.fire({\n          title: `${err.error}`,\n          icon: 'error'\n        });\n\n\n      }\n    );\n   \n\n  }\n\n  solicitar(){\n    this.userService.NewPassword(this.formEmail.value).subscribe(res=>{\n      document.getElementById('change-pass').click();\n      this.formEmail.reset();\n      Swal.fire({\n        icon:\"success\",\n        text:\"Se ha solicitado exitosamente la nueva contraseña\"\n      });\n      \n    },\n    err=>{\n      \n      document.getElementById('change-pass').click();\n      this.formEmail.reset();\n      Swal.fire({\n        icon:\"error\",\n        text:err.error\n      });\n      \n      \n    })\n  }\n\n}\n","<form [formGroup]=\"formSignin\" (ngSubmit)=\"signin()\" class=\"col-sm-6 col-md-9 col-lg-4 mx-auto\">\n\n\n    <div class=\"client card border-0 \">\n\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">\n                <img src=\"./../../../assets/login.png\"\n                 alt=\"login\" width=\"100px\" height=\"100px\">\n            </h5>\n\n            <div class=\"form-group\">\n                <label for=\"email\" class=\"form-label ml-1\">Email</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\">\n\n            </div>\n            <div *ngIf=\"formSignin.get('email').errors && (formSignin.get('email').touched\n                || formSignin.get('email').dirty)\" class=\"alert alert-danger\">\n                Este campo es Obligatorio </div>\n            <div class=\"form-group\">\n                <label for=\"password\" class=\"form-label ml-1\">Contraseña</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Contraseña\">\n\n            </div>\n            <div *ngIf=\"formSignin.get('password').errors && (formSignin.get('password').touched\n                || formSignin.get('password').dirty)\" class=\"alert alert-danger\">\n                Este campo es Obligatorio </div>\n\n            <div class=\"row submit\">\n                <button type=\"submit\" [disabled]=\"!formSignin.valid\" class=\"btn btn-primary\"\n                    style=\"float: center;\">Iniciar Sesión</button>\n            </div>\n            <div class=\"row contrasena\">\n                <button type=\"button\" data-toggle=\"modal\" data-target=\"#change-pass\" class=\"d-block\" id=\"reset-pass\" style=\"float: center;\">He olvidado mi contraseña</button>\n            </div>   \n        </div>\n    </div>\n</form>\n\n<div class=\"modal fade\" id=\"change-pass\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog  modal-dialog-centered \" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\"><b>Solicitar nueva contraseña</b></h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <form [formGroup]=\"formEmail\" (ngSubmit)=\"solicitar()\">\n                <div class=\"form-group mx-auto\">\n                    <label class=\"d-block text-center \"for=\"emailModal\">Ingrese su correo Electronico</label>\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\">\n                </div>\n                <div class=\"modal-footer mx-auto\">\n                    <button type=\"submit\" class=\"btn btn-primary\">Solicitar</button>\n                  </div>\n            </form>\n        \n        </div>\n        \n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  formSignup:FormGroup;\n  constructor(private authService:AuthService, private router:Router, private formBuilder:FormBuilder) {\n      this.formSignup=this.formBuilder.group({\n        name:['',[Validators.required]],\n        email:['',[Validators.required, Validators.email]],\n        password:['',[Validators.required,]]\n      })\n\n  }\n  ngOnInit(): void {\n  }\n  signup(){\n    this.authService.signup(this.formSignup.value).subscribe(\n      res=>{\n        localStorage.setItem('auth-token',res.token);\n        Swal.fire({\n          title:'Felicidades se ha registrado exitosamente !!',\n          icon:'success'\n        });\n        setTimeout(()=>{this.router.navigate(['/signin'])},2000)\n        \n\n        \n      },\n      err=>{\n        Swal.fire({\n          title:`${err.error}`,\n          icon:'error'\n        })\n        \n      }\n    );\n    }  \n\n}\n","<form [formGroup]=\"formSignup\" (submit)=\"signup()\" class=\"col-sm-6 col-md-9 col-lg-4 mx-auto\">\n\n    <div class=\"client card border-0\">\n\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">\n                <img src=\"../../../assets/register.png\" alt=\"register\" width=\"100px\" height=\"100px\">\n            </h5>\n            <div class=\"form-group\">\n                <label for=\"nombre\" class=\"form-label ml-1\">Nombre</label>\n                <input type=\"text\" formControlName=\"name\" class=\"form-control\" placeholder=\"Nombre\">\n                <div *ngIf=\"formSignup.get('name').errors && (formSignup.get('name').touched\n                || formSignup.get('name').dirty)\" class=\"alert alert-danger\">\n                    Este campo es Obligatorio </div>\n\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\" class=\"form-label ml-1\">Email</label>\n                <input type=\"email\" formControlName=email class=\"form-control\" placeholder=\"Email\">\n                <div *ngIf=\"formSignup.get('email').errors && (formSignup.get('email').touched\n                || formSignup.get('email').dirty)\" class=\"alert alert-danger\">\n                    Este campo es Obligatorio </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\" class=\"form-label ml-1\">Contraseña</label>\n                <input type=\"password\" formControlName=password class=\"form-control\" placeholder=\"Contraseña\">\n                <div *ngIf=\"formSignup.get('password').errors && (formSignup.get('password').touched\n                || formSignup.get('password').dirty)\" class=\"alert alert-danger\">\n                    Este campo es Obligatorio </div>\n            </div>\n            <div class=\"row\">\n\n                <button type=\"submit\" [disabled]=\"!formSignup.valid\" class=\"btn btn-primary\" style=\"float: center;\">Registrar</button>\n            </div>\n\n        </div>\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { SiloService } from 'src/app/services/silo.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { ISilo } from 'src/app/interfaces/silo';\n@Component({\n  selector: 'app-configure-silo',\n  templateUrl: './configure-silo.component.html',\n  styleUrls: ['./configure-silo.component.css']\n})\nexport class ConfigureSiloComponent implements OnInit {\n  formSilo:FormGroup;\n  silos:ISilo[]=[];\n  guardarId:string;\n  status:boolean;\n  constructor(private siloService:SiloService,\n    private formBuilder:FormBuilder){ \n      this.formSilo=this.formBuilder.group({\n        nombre:['',[Validators.required]],\n        capacidadTotal:['',[Validators.required]],\n        stock:['',[Validators.required]],\n        tipoProducto:['',[Validators.required]],\n        estado:['',[Validators.required]]\n      })\n    }\n\n  ngOnInit(): void {\n    this.obtenerSilos();\n    this.verify();\n    console.log(this.status);\n    \n    \n  }\n  obtenerSilos(){\n    this.siloService.getSilos()\n      .subscribe(res => {\n        this.silos = res;\n        \n      }\n        );\n\n  }\n  verify(){\n    if (this.silos.length!=0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n  }\n  cargarDatos(silo:any, id:string){\n    this.formSilo=this.formBuilder.group({\n      nombre:silo.nombre,\n      capacidadTotal:silo.capacidadTotal,\n      stock:silo.stock,\n      tipoProducto:silo.tipoProducto,\n      estado:silo.estado\n    }) \n    this.guardarId=id;\n \n     \n\n\n  }\n  deleteSilo(id:string){\n    this.siloService.deleteSilo(id).subscribe(\n      (res)=>{\n        Swal.fire({\n          icon:\"success\",\n          text:\"Datos eliminados exitosamente!!\"\n        })\n        this.obtenerSilos();\n        \n      }\n    );\n    this.verify();\n  }\n  onSubmit(){\n    if(this.formSilo.get('nombre').value==\"\" ||this.formSilo.get('capacidadTotal').value==\"\" ||\n    this.formSilo.get('stock').value==\"\" || this.formSilo.get('tipoProducto').value==\"\" || this.formSilo.get('estado').value==\"\" ){\n      Swal.fire({\n        icon:\"error\",\n        text:\"Por favor complete todos los campos\"\n      });\n    }else{\n\n     this.siloService.updateSilo(this.guardarId,this.formSilo.value).subscribe(\n      res=>{\n        this.obtenerSilos();\n        document.getElementById('updateSilo').click();\n        Swal.fire({\n          icon:\"success\",\n          text:\"Datos actualizados exitosamente!!\"\n        });\n        \n    })\n  }\n  \n    }\n    \n  \n      \n    \n  \n  \n\n}\n","<div class=\"container\">\n    <h3 class=\"text-center\"><b>Configuración de Silos</b></h3>\n    <table class=\"table\">\n        <thead class=\"thead-light\">\n            <tr>\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Capacidad Total</th>\n                <th scope=\"col\">Stock</th>\n                <th scope=\"col\">Tipo de Producto</th>\n                <th scope=\"col\">Estado</th>\n                <th scope=\"col\">Acción</th>\n\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let silo of silos\" class=silo>\n                <td>{{silo.nombre}}</td>\n                <td>{{silo.capacidadTotal}}</td>\n                <td>{{silo.stock}}</td>\n                <td>{{silo.tipoProducto}}</td>\n                <td style=\"color: #007bff;\" *ngIf=\"silo.estado\"><b>Habilitado</b></td>\n                <td style=\"color: red;\" *ngIf=\"!silo.estado\"><b> No Habilitado</b></td>\n                <td><button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#updateSilo\" (click)=\"cargarDatos(silo,silo._id)\">Actualizar</button>\n                    <button type=\"button\" class=\"btn btn-danger m-1\" (click)=\"deleteSilo(silo._id)\">Eliminar</button></td>\n\n            </tr>\n            <tr *ngIf=\"this.status\" class=\"text-center\">\n                <td colspan=\"6\">Aún no hay elementos</td>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"modal fade\" id=\"updateSilo\" tabindex=\"-1\" role=\"dailog\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <form [formGroup]=\"formSilo\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n                    <div class=\"client card\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Actualizar Silo</h4>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">x</button>\n                        </div>\n\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Descripción</h5>\n                            <div class=\"form-group\">\n                                <label for=\"nombre\" class=\"form-label ml-1\">Nombre</label>\n                                <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"capacidadTotal\" class=\"form-label ml-1\">Capacidad Total</label>\n                                <input type=\"text\" formControlName=\"capacidadTotal\" class=\"form-control\" placeholder=\"Capacidad Total\">\n\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"stock\" class=\"form-label ml-1\">Stock Actual</label>\n                                <input type=\"text\" formControlName=\"stock\" class=\"form-control\" placeholder=\"Stock Actual\">\n\n                            </div>\n                            <div class=\"form-group\">\n                              <label for=\"tipoProducto\" class=\"form-label ml-1\">Tipo de Grano</label>\n                              <select class=\"form-control\" formControlName=\"tipoProducto\">\n                                <option value=\"\" selected disabled>Tipo de Grano</option>\n                                <option value=\"Trigo\">Trigo</option>\n                                <option value=\"Soya\">Soya</option>\n                                <option value=\"Avena\">Avena</option>\n                              </select>\n\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"estado\" class=\"form-label ml-1\">Estado</label>\n                                <select type=\"text\" formControlName=\"estado\" class=\"form-control\">\n                                  <option value=\"true\">Habilitado</option>\n                                  <option value=\"false\">No habilitado</option>\n                                </select>\n                            </div>\n\n\n                            <div class=\"modal-footer\">\n                                <button type=\"submit\" [disabled]=\"!formSilo.valid\" class=\"btn btn-primary\">Actualizar</button>\n                                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Cerrar</button>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </form>\n\n\n\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SiloService } from 'src/app/services/silo.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-create-silo',\n  templateUrl: './create-silo.component.html',\n  styleUrls: ['./create-silo.component.css']\n})\nexport class CreateSiloComponent implements OnInit {\n  formSilo:FormGroup;\n\n  constructor(private siloService:SiloService,\n    private formBuilder:FormBuilder){ \n      this.formSilo=this.formBuilder.group({\n        nombre:['',[Validators.required]],\n        capacidadTotal:['',[Validators.required]],\n        stock:['',[Validators.required]],\n        tipoProducto:['',[Validators.required]],\n        estado:['',[Validators.required]]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n \n    \n    this.siloService.createSilo(this.formSilo.value)\n      .subscribe( (data)=>{\n    \n        this.formSilo.reset();\n        Swal.fire({\n          icon:'success',\n          title:'Se han registrado los datos existosamente!!'\n        })\n    \n    },\n    err=>{\n      Swal.fire({\n        icon:'error',\n        title:'No se ha podido registrar la información'\n      })\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h3 class=\"text-center\"><b>Registro de Silo</b></h3>\n    <form [formGroup]=\"formSilo\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n        <div class=\"client card\">\n            <div class=\"card-header\">\n                <h5><b>Detalles del Silo</b></h5>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                    <label for=\"nombre\" class=\"form-label ml-1\">Nombre</label>\n                    <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" placeholder=\"Nombre\">\n                    <div *ngIf=\"formSilo.get('nombre').errors && (formSilo.get('nombre').touched\n                    || formSilo.get('nombre').dirty)\" class=\"alert alert-danger\">\n                        Este campo es Obligatorio </div>\n\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"capacidadTotal\" class=\"form-label ml-1\">Capacidad Total</label>\n                    <input type=\"number\" formControlName=\"capacidadTotal\" class=\"form-control\" placeholder=\"Capacidad Total\">\n                    <div *ngIf=\"formSilo.get('capacidadTotal').errors && (formSilo.get('capacidadTotal').touched\n                    || formSilo.get('capacidadTotal').dirty)\" class=\"alert alert-danger\">\n                        Este campo es Obligatorio </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"stock\" class=\"form-label ml-1\">Stock Actual</label>\n                    <input type=\"number\" formControlName=\"stock\" class=\"form-control\" placeholder=\"Stock Actual\">\n                    <div *ngIf=\"formSilo.get('stock').errors && (formSilo.get('stock').touched\n                    || formSilo.get('stock').dirty)\" class=\"alert alert-danger\">\n                        Este campo es Obligatorio </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"tipoProducto\" class=\"form-label ml-1\">Tipo de Grano</label>\n                    <select class=\"form-control\" formControlName=\"tipoProducto\">\n                      <option value=\"\" selected disabled>Tipo de Grano</option>\n                      <option value=\"Trigo\">Trigo</option>\n                      <option value=\"Soya\">Soya</option>\n                      <option value=\"Avena\">Avena</option>\n                    </select>\n\n\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"estado\" class=\"form-label ml-1\">Estado</label>\n                    <select class=\"form-control\" formControlName=\"estado\">\n                        <option value=\"\" selected disabled>Seleccione estado</option>\n                        <option value=true>Activo</option>\n                        <option value=false>Inactivo</option>\n                    </select>\n\n                </div>\n                <div class=\"row\">\n\n                    <button type=\"submit\" [disabled]=\"!formSilo.valid\" class=\"btn btn-primary\">Registrar</button>\n\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n    </form>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SiloService } from 'src/app/services/silo.service';\nimport { ISilo } from 'src/app/interfaces/silo';\nimport * as jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-list-silos',\n  templateUrl: './list-silos.component.html',\n  styleUrls: ['./list-silos.component.css']\n})\nexport class ListSilosComponent implements OnInit {\n  silos:ISilo[]=[];\n  formSilo: FormGroup;\n  details: FormGroup;\n  status:boolean;\n  @Input() progreso:any;\n  constructor(private siloService:SiloService , private formBuilder: FormBuilder) {\n    this.formSilo = this.formBuilder.group({\n      nombre:['',[Validators.required]],\n      capacidadTotal:['',[Validators.required]],\n      stock:['',[Validators.required]],\n      tipoProducto:['',[Validators.required]],\n      estado:['',[Validators.required]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.obtenerSilos();\n    this.verify();\n    \n  }\n  obtenerSilos(){\n    this.siloService.getSilos()\n      .subscribe(res => {\n        this.silos = res;\n\n      }\n        );\n     this.verify();\n  }\n  verify(){\n    if (this.silos.length!=0) {\n      this.status=true;      \n    }else{\n      this.status=false;\n    }\n  }\n  public downloadPDF():void {\n    let DATA = document.getElementById('dataSilos');\n    let pdf = new jsPDF({\n      orientation:'1',\n      unit:'pt',\n      format:'a4'\n    });\n    pdf.text(\"Listado de Silos \",200,30);\n    autoTable(pdf, { html: '#dataSilos' })\n    pdf.save('angular-demo.pdf');\n  }\n  cargarDatos(silo: any) {\n    this.formSilo = this.formBuilder.group({\n      nombre: silo.nombre,\n      capacidadTotal: silo.capacidadTotal,\n      stock: silo.stock,\n      tipoProducto: silo.tipoProducto,\n      estado: silo.estado\n\n    });\n    this.progreso = (silo.stock*100 )/ silo.capacidadTotal ;\n  }\n  VerSilo(event: Event, silo: any) {\n    event.preventDefault();\n    this.cargarDatos(silo);\n\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"text-center\"><b>Listado de Silos</b></h3>\n    <div class=\"pdf\">\n      <button type=\"button\" (click)=\"downloadPDF()\" class=\"btn btn-danger\">Generar PDF</button>\n\n    </div>\n    <table  class=\"table table-striped table-hover\" id=\"dataSilos\">\n      <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\">Nombre</th>\n          <th scope=\"col\">Capacidad Total</th>\n          <th scope=\"col\">Stock</th>\n          <th scope=\"col\">Tipo de Producto</th>\n          <th scope=\"col\">Estado</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let silo of silos\" class=silo (click)=\"VerSilo($event,silo)\" data-toggle=\"modal\" data-target=\"#updatemodal\">\n          <td>{{silo.nombre}}</td>\n          <td>{{silo.capacidadTotal}}</td>\n          <td>{{silo.stock}}</td>\n          <td>{{silo.tipoProducto}}</td>\n          <td style=\"color: #007bff;\" *ngIf=\"silo.estado\"><b>Habilitado</b></td>\n          <td style=\"color: red;\" *ngIf=\"!silo.estado\"><b> No Habilitado</b></td>\n        </tr>\n        <tr *ngIf=\"this.status\" class=\"text-center\">\n          <td colspan=\"5\">Aún no hay elementos</td>\n      </tr>\n\n\n      </tbody>\n    </table>\n</div>\n\n<div class=\"modal fade\" id=\"updatemodal\" role=\"dailog\">\n  <div class=\"modal-dialog \">\n      <div class=\"modal-content\">\n          <form [formGroup]=formSilo novalidate id=\"export\">\n              <div class=\"modal-header\">\n                  <h4 class=\"modal-title\">Ver Información</h4>\n                  <button type=\"button\" class=\"close\" id=\"modalclose\" data-dismiss=\"modal\">x</button>\n              </div>\n              <div class=\"moda-body\">\n                  <div class=\"client\">\n                      <h5>Silo</h5>\n                      <div class=\"form-group\">\n                          <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                          <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" [attr.disabled]=\"true\" placeholder=\"Nombre\">\n                      </div>\n\n                      <div class=\"form-group\">\n                          <label for=\"rut\" class=\"form-label\">Capacidad Total</label>\n                          <input type=\"text\" formControlName=\"capacidadTotal\" class=\"form-control\" [attr.disabled]=\"true\" placeholder=\"Rut\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label ></label>\n                    </div>\n                    <div class=\"form-group\">\n                      <label ></label>\n                  </div>\n\n                  </div>\n                  <div class=\"details\">\n\n                      <h5>Detalles</h5>\n                      <div class=\"form-group\">\n                          <label for=\"pesoEntrada\" class=\"form-label\">Stock</label>\n                          <input type=\"number\" formControlName=\"stock\" class=\"form-control\" [attr.disabled]=\"true\" placeholder=\"Peso de Entrada\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"pesoEntrada\" class=\"form-label\">Tipo de Producto</label>\n                        <input type=\"text\" formControlName=\"tipoProducto\" class=\"form-control\" [attr.disabled]=\"true\" placeholder=\"Tipo de Producto\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"pesoEntrada\" class=\"form-label\">Estado</label>\n                      <input type=\"text\"  formControlName=\"estado\" class=\"form-control\" [attr.disabled]=\"true\" placeholder=\"Estado\">\n                  </div>\n\n                  </div>\n\n                  <div class=\"vehicle\">\n                    <h5> Porcentaje Llenado</h5>\n\n                    <progress-bar [progress]=\"progreso\" [color]=\"'#3DACD6'\"></progress-bar>\n                </div>\n\n\n\n              </div>\n\n\n\n              <div class=\"modal-footer\">\n                  <button type=\"button\" class=\"btn btn-danger\" id=\"btnmodal\" data-dismiss=\"modal\">Cerrar</button>\n\n              </div>\n\n          </form>\n      </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { IUser } from 'src/app/interfaces/user';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent implements OnInit {\n  users:any;\n  formRole:FormGroup;\n  userId:string;\n  auth:any;\n  constructor(private userService:UserService, private formBuilder:FormBuilder, private authService:AuthService) { \n    this.formRole=this.formBuilder.group({\n      userRole:['',[Validators.required]]\n\n    })\n  }\n\n  ngOnInit(): void {\n    this.userService.getUsersData().subscribe(res=>{\n      this.users=res;\n      \n    });\n    this.auth=this.authService.getUserID();\n    \n\n  }\n  changeRole(){\n    if(this.auth==this.userId){\n      Swal.fire({\n        icon:'error',\n        text:'no tiene permitido realizar esta acción'\n      });\n    }else{\n      this.userService.changeRole(this.formRole.value,this.userId ).subscribe(\n        res=>{\n        document.getElementById('changeRole').click();\n        Swal.fire({\n          icon:'success',\n          text:'Se ha modificado el tipo de usuario exitosamente'\n        });\n      },\n      err=>{\n        document.getElementById('changeRole').click();\n        Swal.fire({\n          icon:'error',\n          text:'no se ha podido realizar la solicitud'\n        });\n      })\n    }\n    \n\n  }\n  cargarDatos(user:any){\n    var name=document.getElementById('name').setAttribute('value',user.name);\n    var name=document.getElementById('email').setAttribute('value',user.email);\n    this.formRole.patchValue({userRole:user.userRole});\n    this.userId=user._id;\n    \n\n  }\n\n}\n","<div class=\"container\">\n    <h3 class=\"text-center\"><b> Listado de Usuarios </b></h3>\n     <table class=\"table table-striped table-hover\" >\n        <thead class=\"thead-light\">\n            <tr>\n              <th scope=\"col\">Nombre</th>\n              <th scope=\"col\">email</th>\n              <th scope=\"col\">tipo de Usuario</th>\n              <th scope=\"col\">Cambiar Role</th>\n    \n            </tr>\n          </thead>\n          <tbody>\n              <tr *ngFor=\"let user of users\">\n                  <td>{{user.name}}</td>\n                  <td>{{user.email}}</td>\n                  <td>{{user.userRole}}</td>\n                  <td><button type=\"button\" (click)=\"cargarDatos(user)\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#changeRole\">Cambiar Rol</button></td>\n              </tr>\n          </tbody>\n     </table>\n</div>\n\n<div class=\"modal fade\" id=\"changeRole\" role=\"dailog\">\n    <div class=\"modal-dialog modal-dialog-centered \">\n        <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title\">Cambiar tipo de usuario</h4>\n                    <button type=\"button\" class=\"close\" id=\"modalclose\" data-dismiss=\"modal\">x</button>\n                </div>\n                <div class=\"modal-body\">\n                    \n                    <div class=\"form-group\">\n                        <label for=\"name\" class=\"form-label\">Nombre de usuario</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" [disabled]=true>\n                    </div>\n                     <div class=\"form-group\">\n                        <label for=\"email\" class=\"form-label\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"email\" [disabled]=true>\n                    </div>\n                    <form [formGroup]=\"formRole\" (ngSubmit)=\"changeRole()\" novalidate>\n                        <label for=\"userRole\">Tipo de Usuario</label>\n                        <select class=\"form-control\" formControlName=\"userRole\">\n                            <option value=\"\" selected disabled>Tipo de usuario</option>\n                            <option value=\"admin\">Admin</option>\n                            <option value=\"encargado\">Encargado</option>\n                            <option value=\"regular\">Regular</option>\n                        </select>\n\n                        <div class=\"modal-footer\">\n                            <button type=\"submit\" [disabled]=\"!formRole.valid\" class=\"btn btn-primary\" >Actualizar</button>\n                            <button type=\"button\" class=\"btn btn-danger\" id=\"btnmodal\" data-dismiss=\"modal\">Cerrar</button>\n          \n                        </div>\n                    </form>\n  \n                </div>\n  \n              \n        </div>\n    </div>\n  </div>\n  \n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { IUser } from 'src/app/interfaces/user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n   \n  }\n\n\n}\n","<div class=\"card col-8 mx-auto\">\n    <div class=\"card-header\">\n        <h2 class=\"card-title\">Perfil de Usuario</h2>\n    </div>\n    <div class=\"card-body\">\n\n        <img src=\"\" alt=\"\" width=\"100px\" height=\"100px\">\n        <label for=\"\">Nombre</label>\n        <input type=\"text\" name=\"nombre\" class=\"form-control\" disabled>\n        <label for=\"Email\">Email</label>\n        <input type=\"text\" name=\"email\" class=\"form-control\" disabled>\n        <label for=\"role\">Rol de Usuario</label>\n        <input type=\"text\" name=\"role\" class=\"form-control\" disabled>\n\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-primary mx-auto\">Volver</button>\n    </div>\n</div>","export var Global ={\n    url:'/api/'\n}\nexport var Auth={\n    url:'/api/auth/'\n\n\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private router:Router){}\n\n  canActivate():boolean{\n    let token = localStorage.getItem('auth-token');\n    if (token) {\n      return true;\n    } else {\n      this.router.navigate(['/signin']);\n      return false;\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAdminGuard implements CanActivate {\n\n\n  constructor(private authService:AuthService, private router:Router){}\n\n  canActivate():boolean{\n    let role=this.authService.getUserRole();\n    \n    if (role==\"admin\") {\n      return true;\n    }else{\n      this.router.navigate(['/home']);\n      return false\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserEncargadoGuard implements CanActivate {\n  constructor(private authService:AuthService, private router:Router){}\n\n  canActivate():boolean{\n    let role=this.authService.getUserRole();\n    \n    if (role==\"encargado\"  || role==\"admin\") {\n      return true;\n    }else{\n      this.router.navigate(['/home']);\n      return false\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Auth } from '../global';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {IUser } from '../interfaces/user'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url:string;\n\n  constructor(private http:HttpClient,private router:Router) {\n    this.url=Auth.url;\n   }\n\n   signup(user:any):Observable<any>{\n      return this.http.post(this.url+'signup',user);\n   }\n   signin(user:any):Observable<any>{\n    let params=JSON.stringify(user)\n     return this.http.post(this.url+'signin',user);\n   }\n   loggedIn():Boolean{\n     \n    if(typeof(localStorage.getItem(\"auth-token\"))=='undefined' || localStorage.getItem(\"auth-token\")==null ){\n      return true;\n    }else{\n      return false;\n    }\n        \n    \n   }\n   getToken():String{\n     return localStorage.getItem('auth-token');\n   }\n   logout():void{\n     localStorage.removeItem('auth-token');\n     localStorage.removeItem('user');\n     window.open('/home' , '_self' );\n\n\n   }\n   getUserID(){\n     let user: IUser=JSON.parse(localStorage.getItem('user'));\n\n     return user._id;\n   }\n   getUserRole(){\n    let user: IUser=JSON.parse(localStorage.getItem('user'));\n\n    return user.userRole;\n  }\n  getUserName(){\n    let user: IUser=JSON.parse(localStorage.getItem('user'));    \n    return user.name;\n  }\n  \n  \n   \n   \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Global } from '../global';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PedidoService {\n  public url:string;\n\n  constructor(private http:HttpClient) {\n    this.url=Global.url;\n   }\n  savePedido(pedido:any):Observable<any>{\n    let params = JSON.stringify(pedido);\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.post(this.url+'pedidos',params,{headers:headers})\n  }\n  getPedidos():Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.get(this.url+'pedidos',{headers:headers});\n  }\n  getPedidosFalse():Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.get(this.url+'pedidospendientes',{headers:headers});\n  }\n  getPedido(id:string):Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.get(this.url+'pedido/'+id,{headers:headers})\n  }\n  deletePedido(id:string):Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.delete(this.url+'pedido/'+id,{headers:headers})\n\n  }\n  getMisPedidos(id:string):Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application.json');\n    return this.http.get(this.url+'pedidos/'+id,{headers:headers});\n  }\n  \n  setStatus(id:string):Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application.json');\n    return this.http.put(this.url+'pedidos/'+id, {headers:headers});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Pesaje} from '../models/pesaje';\nimport {Global} from '../global';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PesajeService {\n  public url:string;\n\n  constructor(private http:HttpClient) { \n    this.url=Global.url;\n  }\n\n  public selectPesaje:Pesaje={\n      _id:null,\n      nombre:'',\n      rut:'',\n      razonSocial:'',\n      pesoEntrada:'',\n      pesoSalida:'',\n      tipoTransaccion:'',\n      patente:'',\n      tipoVehiculo:''\n\n    }\n\n  guardarPesaje(pesaje:any):Observable<any>{\n    let params=JSON.stringify(pesaje);\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.post(this.url+'pesajes',params,{headers:headers})\n\n     \n  }\n  obtenerPesajes():Observable<any>{\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.get(this.url+'pesajes',{headers:headers})\n  }\n  deletePesaje(id:any):Observable<any>{\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.delete(this.url+'pesaje/'+id,{headers:headers});\n\n  }\n  updatePesaje(id:string,pesaje:any){\n    let params=JSON.stringify(pesaje);\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.put(this.url+'pesaje/'+id,params,{headers:headers});\n\n\n  }\n  getPesaje(id): Observable<any>{\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\t\treturn this.http.get(this.url+'pesaje/'+id, {headers: headers});\n\t}\n  \n  \n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Global } from '../global';\nimport {Photo} from './../interfaces/photo';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n  url: string;\n\n  constructor(private http: HttpClient) {\n    this.url = Global.url;\n  }\n\n  createPhoto(title: string, description: string, price:string,stock:string,photo: File) {\n    const fd = new FormData();    \n    fd.append('title', title);\n    fd.append('description', description);\n    fd.append('price', price);\n    fd.append('stock', stock);\n    fd.append('image', photo);\n    let auth=localStorage.getItem(\"auth-token\");\n  \n    return this.http.post(this.url + \"photos\", fd)\n\n\n  }\n  createProducto(producto:any){\n    return this.http.post(this.url+'photos',producto)\n  }\n  getPhotos() {\n    return this.http.get<Photo[]>(this.url+'photos');\n  }\n\n  getPhoto(id: string):Observable<Photo> {\n\n    return this.http.get<Photo>(this.url+'photos/'+id);\n  }\n\n  deletePhoto(id: string) {\n    return this.http.delete(this.url+'photos/'+id);\n  }\n\n  updatePhoto(id: string, title: string, description: string, price:string,stock:string) {\n    return this.http.put(this.url+'photos/'+id, { title, description ,price,stock});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Global } from '../global';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SiloService {\n\n  public url:string\n\n  constructor(private http:HttpClient) {\n    this.url=Global.url;\n   }\n\n\n\n  getSilos():Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.get(this.url+'silos',{headers:headers});\n\n  }\n  createSilo(silo:any):Observable<any>{\n    let params =JSON.stringify(silo);\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.post(this.url+'silos',params,{headers:headers});\n  }\n  deleteSilo(id:any):Observable<any>{\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.delete(this.url+'silos/'+id,{headers:headers});\n\n  }\n  updateSilo(id:string,silo:any){\n    let params=JSON.stringify(silo);\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.put(this.url+'silos/'+id,params,{headers:headers});\n\n\n  }\n  getSilo(id): Observable<any>{\n\t\tlet headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\t\treturn this.http.get(this.url+'silos/'+id, {headers: headers});\n\t}\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler,HttpRequest, HttpEvent } from \"@angular/common/http\";\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  \n  constructor(private authService:AuthService) { }\n  \n  intercept(req:HttpRequest<any>,next:HttpHandler): Observable<HttpEvent<any>>{\n    const token = localStorage.getItem('auth-token');\n    if(!!token){\n      req=req.clone({\n        setHeaders:{\n          'Accept'       : 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })\n\n    }\n   \n    return next.handle(req);\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Global } from '../global';\nimport { Observable } from \"rxjs\";\nimport { IUser } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  url:string;\n\n  constructor(private http:HttpClient) { \n      this.url=Global.url;\n  }\n\n  getUsers():Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.get(this.url+'usersInfo',{headers:headers});\n\n  }\n  getUsersData():Observable<IUser>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n\n    return this.http.get<IUser>(this.url+'users',{headers:headers});\n\n  }\n  changeRole(userRole:string, id:string):Observable<any>{\n    let headers= new HttpHeaders().set('Content-Type','application/json');\n    return this.http.put(this.url+'user/'+id,userRole,{headers:headers});\n\n  }\n  NewPassword(email:string):Observable<any>{\n    return this.http.post(this.url+'newpass',email);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}